
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ID VAL_LITERAL CHAR_LITERAL SCALAR_VAR ARRAY_VAR VAL_COPY ADD SUB MULT DIV TEST_LESS TEST_GTR TEST_EQU TEST_NEQU TEST_GTE TEST_LTE JUMP JUMP_IF_0 JUMP_IF_N0 RANDOM OUT_VAL OUT_CHAR NOP PUSH POP AR_GET_IDX AR_SET_IDX AR_GET_SIZE AR_SET_SIZE AR_COPY AR_PUSH AR_POP\n    program : statements\n    \n    statements :\n    \n    statements : statements statement\n    \n    statement : VAL_COPY value SCALAR_VAR\n    \n    statement : ADD value value SCALAR_VAR\n    \n    statement : SUB value value SCALAR_VAR\n    \n    statement : MULT value value SCALAR_VAR\n    \n    statement : DIV value value SCALAR_VAR\n    \n    statement : TEST_LESS value value SCALAR_VAR\n    \n    statement : TEST_GTR value value SCALAR_VAR\n    \n    statement : TEST_EQU value value SCALAR_VAR\n    \n    statement : TEST_NEQU value value SCALAR_VAR\n    \n    statement : TEST_GTE value value SCALAR_VAR\n    \n    statement : TEST_LTE value value SCALAR_VAR\n    \n    statement : ID ':'\n    \n    value : ID\n    \n    statement : JUMP value\n    \n    statement : JUMP_IF_0 value value\n    \n    statement : JUMP_IF_N0 value value\n    \n    statement : RANDOM value SCALAR_VAR\n    \n    statement : OUT_VAL value\n    \n    statement : OUT_CHAR value\n    \n    statement : NOP\n    \n    statement : PUSH value\n    \n    statement : POP SCALAR_VAR\n    \n    statement : AR_GET_IDX ARRAY_VAR value SCALAR_VAR\n    \n    statement : AR_SET_IDX ARRAY_VAR value value\n    \n    statement : AR_GET_SIZE ARRAY_VAR SCALAR_VAR\n    \n    statement : AR_SET_SIZE ARRAY_VAR value\n    \n    statement : AR_COPY ARRAY_VAR ARRAY_VAR\n    \n    statement : AR_PUSH ARRAY_VAR ARRAY_VAR\n    \n    statement : AR_POP ARRAY_VAR ARRAY_VAR\n    \n    value : CHAR_LITERAL\n    \n    value : VAL_LITERAL\n    \n    value : SCALAR_VAR\n    "
    
_lr_action_items = {'AR_SET_IDX':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,7,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'OUT_VAL':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,4,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'PUSH':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,21,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'AR_PUSH':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,25,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'DIV':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,3,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'AR_POP':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,8,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'$end':([0,1,2,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,-1,0,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'ADD':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,9,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'CHAR_LITERAL':([3,4,5,6,9,10,11,15,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,38,39,40,42,43,46,48,49,54,57,59,60,61,62,66,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-33,-34,32,-16,-35,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TEST_LTE':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,10,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'MULT':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,6,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'SCALAR_VAR':([3,4,5,6,9,10,11,12,15,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,38,39,40,42,43,46,47,48,49,51,53,54,57,59,60,61,62,63,64,65,66,68,69,72,73,76,80,82,83,],[36,36,36,36,36,36,36,45,36,36,36,36,36,36,36,36,36,36,36,-33,-34,36,-16,-35,36,36,36,36,36,36,71,36,36,74,75,36,36,36,36,36,36,84,85,86,36,88,89,90,91,92,93,94,95,]),'JUMP':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,11,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'POP':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,12,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'ARRAY_VAR':([7,8,13,14,16,25,27,41,56,58,],[40,41,46,47,49,56,58,67,77,79,]),'AR_SET_SIZE':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,13,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'AR_GET_SIZE':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,14,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'SUB':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,15,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'AR_GET_IDX':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,16,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'ID':([0,1,3,4,5,6,9,10,11,15,18,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,48,49,50,52,54,55,57,59,60,61,62,66,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,17,35,35,35,35,35,35,35,35,-23,-3,35,35,35,35,35,35,35,35,35,35,-33,-34,35,-16,-35,-21,35,35,35,35,35,-17,-25,35,35,35,-15,-24,35,-22,35,35,35,35,35,35,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'NOP':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,18,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),':':([17,],[50,]),'TEST_LESS':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,5,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'JUMP_IF_0':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,29,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'OUT_CHAR':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,24,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'TEST_GTE':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,23,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'VAL_COPY':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,22,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'TEST_GTR':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,28,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'AR_COPY':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,27,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'VAL_LITERAL':([3,4,5,6,9,10,11,15,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,38,39,40,42,43,46,48,49,54,57,59,60,61,62,66,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-33,-34,33,-16,-35,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'JUMP_IF_N0':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,26,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'RANDOM':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,20,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'TEST_EQU':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,30,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),'TEST_NEQU':([0,1,18,19,32,33,35,36,37,44,45,50,52,55,67,70,71,74,75,77,78,79,81,84,85,86,87,88,89,90,91,92,93,94,95,],[-2,31,-23,-3,-33,-34,-16,-35,-21,-17,-25,-15,-24,-22,-32,-29,-28,-20,-4,-31,-19,-30,-18,-8,-9,-7,-27,-5,-14,-6,-26,-13,-10,-11,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([1,],[19,]),'program':([0,],[2,]),'value':([3,4,5,6,9,10,11,15,20,21,22,23,24,26,28,29,30,31,34,38,39,40,42,43,46,48,49,54,57,59,60,61,62,66,],[34,37,38,39,42,43,44,48,51,52,53,54,55,57,59,60,61,62,63,64,65,66,68,69,70,72,73,76,78,80,81,82,83,87,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','bad_interpreter.py',156),
  ('statements -> <empty>','statements',0,'p_statements_empty','bad_interpreter.py',162),
  ('statements -> statements statement','statements',2,'p_statements_nonempty','bad_interpreter.py',168),
  ('statement -> VAL_COPY value SCALAR_VAR','statement',3,'p_val_copy','bad_interpreter.py',174),
  ('statement -> ADD value value SCALAR_VAR','statement',4,'p_add','bad_interpreter.py',180),
  ('statement -> SUB value value SCALAR_VAR','statement',4,'p_sub','bad_interpreter.py',187),
  ('statement -> MULT value value SCALAR_VAR','statement',4,'p_mult','bad_interpreter.py',193),
  ('statement -> DIV value value SCALAR_VAR','statement',4,'p_div','bad_interpreter.py',199),
  ('statement -> TEST_LESS value value SCALAR_VAR','statement',4,'p_test_less','bad_interpreter.py',205),
  ('statement -> TEST_GTR value value SCALAR_VAR','statement',4,'p_test_gtr','bad_interpreter.py',211),
  ('statement -> TEST_EQU value value SCALAR_VAR','statement',4,'p_test_equ','bad_interpreter.py',217),
  ('statement -> TEST_NEQU value value SCALAR_VAR','statement',4,'p_test_nequ','bad_interpreter.py',223),
  ('statement -> TEST_GTE value value SCALAR_VAR','statement',4,'p_test_gte','bad_interpreter.py',229),
  ('statement -> TEST_LTE value value SCALAR_VAR','statement',4,'p_test_lte','bad_interpreter.py',235),
  ('statement -> ID :','statement',2,'p_label_statement','bad_interpreter.py',242),
  ('value -> ID','value',1,'p_label_value','bad_interpreter.py',248),
  ('statement -> JUMP value','statement',2,'p_jump','bad_interpreter.py',254),
  ('statement -> JUMP_IF_0 value value','statement',3,'p_jump_if_0','bad_interpreter.py',260),
  ('statement -> JUMP_IF_N0 value value','statement',3,'p_jump_if_n0','bad_interpreter.py',266),
  ('statement -> RANDOM value SCALAR_VAR','statement',3,'p_random','bad_interpreter.py',272),
  ('statement -> OUT_VAL value','statement',2,'p_out_val','bad_interpreter.py',278),
  ('statement -> OUT_CHAR value','statement',2,'p_out_char','bad_interpreter.py',284),
  ('statement -> NOP','statement',1,'p_nop','bad_interpreter.py',290),
  ('statement -> PUSH value','statement',2,'p_push','bad_interpreter.py',296),
  ('statement -> POP SCALAR_VAR','statement',2,'p_pop','bad_interpreter.py',302),
  ('statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR','statement',4,'p_ar_get_idx','bad_interpreter.py',308),
  ('statement -> AR_SET_IDX ARRAY_VAR value value','statement',4,'p_ar_set_idx','bad_interpreter.py',314),
  ('statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR','statement',3,'p_ar_get_size','bad_interpreter.py',320),
  ('statement -> AR_SET_SIZE ARRAY_VAR value','statement',3,'p_ar_set_size','bad_interpreter.py',326),
  ('statement -> AR_COPY ARRAY_VAR ARRAY_VAR','statement',3,'p_ar_copy','bad_interpreter.py',332),
  ('statement -> AR_PUSH ARRAY_VAR ARRAY_VAR','statement',3,'p_ar_push','bad_interpreter.py',338),
  ('statement -> AR_POP ARRAY_VAR ARRAY_VAR','statement',3,'p_ar_pop','bad_interpreter.py',344),
  ('value -> CHAR_LITERAL','value',1,'p_char_literal','bad_interpreter.py',351),
  ('value -> VAL_LITERAL','value',1,'p_val_literal','bad_interpreter.py',375),
  ('value -> SCALAR_VAR','value',1,'p_scalar_var_value','bad_interpreter.py',381),
]
