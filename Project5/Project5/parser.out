Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    WHITESPACE
    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> <empty>
Rule 3     statements -> statements statement
Rule 4     statement -> scopeupbro { statements }
Rule 5     statement -> COMMAND_BREAK ;
Rule 6     scopeupbro -> <empty>
Rule 7     statement -> ;
Rule 8     statement -> expression ;
Rule 9     statement -> declaration ;
Rule 10    statement -> print_statement ;
Rule 11    print_statement -> COMMAND_PRINT ( non_empty_comma_sep_expr )
Rule 12    non_empty_comma_sep_expr -> expression
Rule 13    non_empty_comma_sep_expr -> expression , non_empty_comma_sep_expr
Rule 14    declaration -> simple_declaration
Rule 15    declaration -> assign_declaration
Rule 16    simple_declaration -> type ID
Rule 17    assign_declaration -> simple_declaration = expression
Rule 18    statement -> COMMAND_IF ( expression ) statement
Rule 19    statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement
Rule 20    statement -> COMMAND_WHILE ( expression ) statement
Rule 21    var_usage -> ID
Rule 22    var_usage -> ID [ expression ]
Rule 23    expression -> var_usage = expression
Rule 24    expression -> expression . ID ( )
Rule 25    expression -> expression . ID ( expression )
Rule 26    expression -> var_usage ASSIGN_ADD expression
Rule 27    expression -> var_usage ASSIGN_SUB expression
Rule 28    expression -> var_usage ASSIGN_MULT expression
Rule 29    expression -> var_usage ASSIGN_DIV expression
Rule 30    expression -> var_usage
Rule 31    expression -> COMMAND_RANDOM ( expression )
Rule 32    type -> TYPE
Rule 33    type -> ALIAS_TYPE
Rule 34    type -> META_TYPE ( TYPE )
Rule 35    expression -> expression BOOL_AND expression
Rule 36    expression -> expression BOOL_OR expression
Rule 37    expression -> VAL_LITERAL
Rule 38    expression -> CHAR_LITERAL
Rule 39    expression -> STRING_LITERAL
Rule 40    expression -> expression - expression
Rule 41    expression -> expression * expression
Rule 42    expression -> expression / expression
Rule 43    expression -> expression + expression
Rule 44    expression -> expression COMP_EQU expression
Rule 45    expression -> expression COMP_NEQU expression
Rule 46    expression -> - expression
Rule 47    expression -> ! expression
Rule 48    expression -> expression COMP_LESS expression
Rule 49    expression -> expression COMP_GTR expression
Rule 50    expression -> expression COMP_LTE expression
Rule 51    expression -> expression COMP_GTE expression
Rule 52    expression -> ( expression )

Terminals, with rules where they appear

!                    : 47
(                    : 11 18 19 20 24 25 31 34 52
)                    : 11 18 19 20 24 25 31 34 52
*                    : 41
+                    : 43
,                    : 13
-                    : 40 46
.                    : 24 25
/                    : 42
;                    : 5 7 8 9 10
=                    : 17 23
ALIAS_TYPE           : 33
ASSIGN_ADD           : 26
ASSIGN_DIV           : 29
ASSIGN_MULT          : 28
ASSIGN_SUB           : 27
BOOL_AND             : 35
BOOL_OR              : 36
CHAR_LITERAL         : 38
COMMAND_BREAK        : 5
COMMAND_ELSE         : 19
COMMAND_IF           : 18 19
COMMAND_PRINT        : 11
COMMAND_RANDOM       : 31
COMMAND_WHILE        : 20
COMMENT              : 
COMP_EQU             : 44
COMP_GTE             : 51
COMP_GTR             : 49
COMP_LESS            : 48
COMP_LTE             : 50
COMP_NEQU            : 45
ID                   : 16 21 22 24 25
META_TYPE            : 34
STRING_LITERAL       : 39
TYPE                 : 32 34
VAL_LITERAL          : 37
WHITESPACE           : 
[                    : 22
]                    : 22
error                : 
{                    : 4
}                    : 4

Nonterminals, with rules where they appear

assign_declaration   : 15
declaration          : 9
expression           : 8 12 13 17 18 19 20 22 23 24 25 25 26 27 28 29 31 35 35 36 36 40 40 41 41 42 42 43 43 44 44 45 45 46 47 48 48 49 49 50 50 51 51 52
non_empty_comma_sep_expr : 11 13
print_statement      : 10
program              : 0
scopeupbro           : 4
simple_declaration   : 14 17
statement            : 3 18 19 19 20
statements           : 1 3 4
type                 : 16
var_usage            : 23 26 27 28 29 30

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> .
    (3) statements -> . statements statement

    COMMAND_BREAK   reduce using rule 2 (statements -> .)
    ;               reduce using rule 2 (statements -> .)
    COMMAND_IF      reduce using rule 2 (statements -> .)
    COMMAND_WHILE   reduce using rule 2 (statements -> .)
    COMMAND_RANDOM  reduce using rule 2 (statements -> .)
    VAL_LITERAL     reduce using rule 2 (statements -> .)
    CHAR_LITERAL    reduce using rule 2 (statements -> .)
    STRING_LITERAL  reduce using rule 2 (statements -> .)
    -               reduce using rule 2 (statements -> .)
    !               reduce using rule 2 (statements -> .)
    (               reduce using rule 2 (statements -> .)
    COMMAND_PRINT   reduce using rule 2 (statements -> .)
    ID              reduce using rule 2 (statements -> .)
    TYPE            reduce using rule 2 (statements -> .)
    ALIAS_TYPE      reduce using rule 2 (statements -> .)
    META_TYPE       reduce using rule 2 (statements -> .)
    {               reduce using rule 2 (statements -> .)
    $end            reduce using rule 2 (statements -> .)

    program                        shift and go to state 1
    statements                     shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (3) statements -> statements . statement
    (4) statement -> . scopeupbro { statements }
    (5) statement -> . COMMAND_BREAK ;
    (7) statement -> . ;
    (8) statement -> . expression ;
    (9) statement -> . declaration ;
    (10) statement -> . print_statement ;
    (18) statement -> . COMMAND_IF ( expression ) statement
    (19) statement -> . COMMAND_IF ( expression ) statement COMMAND_ELSE statement
    (20) statement -> . COMMAND_WHILE ( expression ) statement
    (6) scopeupbro -> .
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (14) declaration -> . simple_declaration
    (15) declaration -> . assign_declaration
    (11) print_statement -> . COMMAND_PRINT ( non_empty_comma_sep_expr )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]
    (16) simple_declaration -> . type ID
    (17) assign_declaration -> . simple_declaration = expression
    (32) type -> . TYPE
    (33) type -> . ALIAS_TYPE
    (34) type -> . META_TYPE ( TYPE )

    $end            reduce using rule 1 (program -> statements .)
    COMMAND_BREAK   shift and go to state 6
    ;               shift and go to state 10
    COMMAND_IF      shift and go to state 15
    COMMAND_WHILE   shift and go to state 4
    {               reduce using rule 6 (scopeupbro -> .)
    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    COMMAND_PRINT   shift and go to state 5
    ID              shift and go to state 7
    TYPE            shift and go to state 24
    ALIAS_TYPE      shift and go to state 18
    META_TYPE       shift and go to state 13

    scopeupbro                     shift and go to state 11
    statement                      shift and go to state 20
    simple_declaration             shift and go to state 26
    expression                     shift and go to state 17
    print_statement                shift and go to state 23
    var_usage                      shift and go to state 22
    declaration                    shift and go to state 19
    assign_declaration             shift and go to state 21
    type                           shift and go to state 8

state 3

    (47) expression -> ! . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 28

state 4

    (20) statement -> COMMAND_WHILE . ( expression ) statement

    (               shift and go to state 29


state 5

    (11) print_statement -> COMMAND_PRINT . ( non_empty_comma_sep_expr )

    (               shift and go to state 30


state 6

    (5) statement -> COMMAND_BREAK . ;

    ;               shift and go to state 31


state 7

    (21) var_usage -> ID .
    (22) var_usage -> ID . [ expression ]

    =               reduce using rule 21 (var_usage -> ID .)
    ASSIGN_ADD      reduce using rule 21 (var_usage -> ID .)
    ASSIGN_SUB      reduce using rule 21 (var_usage -> ID .)
    ASSIGN_MULT     reduce using rule 21 (var_usage -> ID .)
    ASSIGN_DIV      reduce using rule 21 (var_usage -> ID .)
    )               reduce using rule 21 (var_usage -> ID .)
    .               reduce using rule 21 (var_usage -> ID .)
    BOOL_AND        reduce using rule 21 (var_usage -> ID .)
    BOOL_OR         reduce using rule 21 (var_usage -> ID .)
    -               reduce using rule 21 (var_usage -> ID .)
    *               reduce using rule 21 (var_usage -> ID .)
    /               reduce using rule 21 (var_usage -> ID .)
    +               reduce using rule 21 (var_usage -> ID .)
    COMP_EQU        reduce using rule 21 (var_usage -> ID .)
    COMP_NEQU       reduce using rule 21 (var_usage -> ID .)
    COMP_LESS       reduce using rule 21 (var_usage -> ID .)
    COMP_GTR        reduce using rule 21 (var_usage -> ID .)
    COMP_LTE        reduce using rule 21 (var_usage -> ID .)
    COMP_GTE        reduce using rule 21 (var_usage -> ID .)
    ;               reduce using rule 21 (var_usage -> ID .)
    ,               reduce using rule 21 (var_usage -> ID .)
    ]               reduce using rule 21 (var_usage -> ID .)
    [               shift and go to state 32


state 8

    (16) simple_declaration -> type . ID

    ID              shift and go to state 33


state 9

    (39) expression -> STRING_LITERAL .

    )               reduce using rule 39 (expression -> STRING_LITERAL .)
    .               reduce using rule 39 (expression -> STRING_LITERAL .)
    BOOL_AND        reduce using rule 39 (expression -> STRING_LITERAL .)
    BOOL_OR         reduce using rule 39 (expression -> STRING_LITERAL .)
    -               reduce using rule 39 (expression -> STRING_LITERAL .)
    *               reduce using rule 39 (expression -> STRING_LITERAL .)
    /               reduce using rule 39 (expression -> STRING_LITERAL .)
    +               reduce using rule 39 (expression -> STRING_LITERAL .)
    COMP_EQU        reduce using rule 39 (expression -> STRING_LITERAL .)
    COMP_NEQU       reduce using rule 39 (expression -> STRING_LITERAL .)
    COMP_LESS       reduce using rule 39 (expression -> STRING_LITERAL .)
    COMP_GTR        reduce using rule 39 (expression -> STRING_LITERAL .)
    COMP_LTE        reduce using rule 39 (expression -> STRING_LITERAL .)
    COMP_GTE        reduce using rule 39 (expression -> STRING_LITERAL .)
    ;               reduce using rule 39 (expression -> STRING_LITERAL .)
    ,               reduce using rule 39 (expression -> STRING_LITERAL .)
    ]               reduce using rule 39 (expression -> STRING_LITERAL .)


state 10

    (7) statement -> ; .

    COMMAND_BREAK   reduce using rule 7 (statement -> ; .)
    ;               reduce using rule 7 (statement -> ; .)
    COMMAND_IF      reduce using rule 7 (statement -> ; .)
    COMMAND_WHILE   reduce using rule 7 (statement -> ; .)
    COMMAND_RANDOM  reduce using rule 7 (statement -> ; .)
    VAL_LITERAL     reduce using rule 7 (statement -> ; .)
    CHAR_LITERAL    reduce using rule 7 (statement -> ; .)
    STRING_LITERAL  reduce using rule 7 (statement -> ; .)
    -               reduce using rule 7 (statement -> ; .)
    !               reduce using rule 7 (statement -> ; .)
    (               reduce using rule 7 (statement -> ; .)
    COMMAND_PRINT   reduce using rule 7 (statement -> ; .)
    ID              reduce using rule 7 (statement -> ; .)
    TYPE            reduce using rule 7 (statement -> ; .)
    ALIAS_TYPE      reduce using rule 7 (statement -> ; .)
    META_TYPE       reduce using rule 7 (statement -> ; .)
    {               reduce using rule 7 (statement -> ; .)
    $end            reduce using rule 7 (statement -> ; .)
    }               reduce using rule 7 (statement -> ; .)
    COMMAND_ELSE    reduce using rule 7 (statement -> ; .)


state 11

    (4) statement -> scopeupbro . { statements }

    {               shift and go to state 34


state 12

    (37) expression -> VAL_LITERAL .

    )               reduce using rule 37 (expression -> VAL_LITERAL .)
    .               reduce using rule 37 (expression -> VAL_LITERAL .)
    BOOL_AND        reduce using rule 37 (expression -> VAL_LITERAL .)
    BOOL_OR         reduce using rule 37 (expression -> VAL_LITERAL .)
    -               reduce using rule 37 (expression -> VAL_LITERAL .)
    *               reduce using rule 37 (expression -> VAL_LITERAL .)
    /               reduce using rule 37 (expression -> VAL_LITERAL .)
    +               reduce using rule 37 (expression -> VAL_LITERAL .)
    COMP_EQU        reduce using rule 37 (expression -> VAL_LITERAL .)
    COMP_NEQU       reduce using rule 37 (expression -> VAL_LITERAL .)
    COMP_LESS       reduce using rule 37 (expression -> VAL_LITERAL .)
    COMP_GTR        reduce using rule 37 (expression -> VAL_LITERAL .)
    COMP_LTE        reduce using rule 37 (expression -> VAL_LITERAL .)
    COMP_GTE        reduce using rule 37 (expression -> VAL_LITERAL .)
    ;               reduce using rule 37 (expression -> VAL_LITERAL .)
    ,               reduce using rule 37 (expression -> VAL_LITERAL .)
    ]               reduce using rule 37 (expression -> VAL_LITERAL .)


state 13

    (34) type -> META_TYPE . ( TYPE )

    (               shift and go to state 35


state 14

    (31) expression -> COMMAND_RANDOM . ( expression )

    (               shift and go to state 36


state 15

    (18) statement -> COMMAND_IF . ( expression ) statement
    (19) statement -> COMMAND_IF . ( expression ) statement COMMAND_ELSE statement

    (               shift and go to state 37


state 16

    (38) expression -> CHAR_LITERAL .

    )               reduce using rule 38 (expression -> CHAR_LITERAL .)
    .               reduce using rule 38 (expression -> CHAR_LITERAL .)
    BOOL_AND        reduce using rule 38 (expression -> CHAR_LITERAL .)
    BOOL_OR         reduce using rule 38 (expression -> CHAR_LITERAL .)
    -               reduce using rule 38 (expression -> CHAR_LITERAL .)
    *               reduce using rule 38 (expression -> CHAR_LITERAL .)
    /               reduce using rule 38 (expression -> CHAR_LITERAL .)
    +               reduce using rule 38 (expression -> CHAR_LITERAL .)
    COMP_EQU        reduce using rule 38 (expression -> CHAR_LITERAL .)
    COMP_NEQU       reduce using rule 38 (expression -> CHAR_LITERAL .)
    COMP_LESS       reduce using rule 38 (expression -> CHAR_LITERAL .)
    COMP_GTR        reduce using rule 38 (expression -> CHAR_LITERAL .)
    COMP_LTE        reduce using rule 38 (expression -> CHAR_LITERAL .)
    COMP_GTE        reduce using rule 38 (expression -> CHAR_LITERAL .)
    ;               reduce using rule 38 (expression -> CHAR_LITERAL .)
    ,               reduce using rule 38 (expression -> CHAR_LITERAL .)
    ]               reduce using rule 38 (expression -> CHAR_LITERAL .)


state 17

    (8) statement -> expression . ;
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    ;               shift and go to state 44
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40


state 18

    (33) type -> ALIAS_TYPE .

    ID              reduce using rule 33 (type -> ALIAS_TYPE .)


state 19

    (9) statement -> declaration . ;

    ;               shift and go to state 52


state 20

    (3) statements -> statements statement .

    }               reduce using rule 3 (statements -> statements statement .)
    COMMAND_BREAK   reduce using rule 3 (statements -> statements statement .)
    ;               reduce using rule 3 (statements -> statements statement .)
    COMMAND_IF      reduce using rule 3 (statements -> statements statement .)
    COMMAND_WHILE   reduce using rule 3 (statements -> statements statement .)
    COMMAND_RANDOM  reduce using rule 3 (statements -> statements statement .)
    VAL_LITERAL     reduce using rule 3 (statements -> statements statement .)
    CHAR_LITERAL    reduce using rule 3 (statements -> statements statement .)
    STRING_LITERAL  reduce using rule 3 (statements -> statements statement .)
    -               reduce using rule 3 (statements -> statements statement .)
    !               reduce using rule 3 (statements -> statements statement .)
    (               reduce using rule 3 (statements -> statements statement .)
    COMMAND_PRINT   reduce using rule 3 (statements -> statements statement .)
    ID              reduce using rule 3 (statements -> statements statement .)
    TYPE            reduce using rule 3 (statements -> statements statement .)
    ALIAS_TYPE      reduce using rule 3 (statements -> statements statement .)
    META_TYPE       reduce using rule 3 (statements -> statements statement .)
    {               reduce using rule 3 (statements -> statements statement .)
    $end            reduce using rule 3 (statements -> statements statement .)


state 21

    (15) declaration -> assign_declaration .

    ;               reduce using rule 15 (declaration -> assign_declaration .)


state 22

    (23) expression -> var_usage . = expression
    (26) expression -> var_usage . ASSIGN_ADD expression
    (27) expression -> var_usage . ASSIGN_SUB expression
    (28) expression -> var_usage . ASSIGN_MULT expression
    (29) expression -> var_usage . ASSIGN_DIV expression
    (30) expression -> var_usage .

    =               shift and go to state 57
    ASSIGN_ADD      shift and go to state 55
    ASSIGN_SUB      shift and go to state 53
    ASSIGN_MULT     shift and go to state 56
    ASSIGN_DIV      shift and go to state 54
    )               reduce using rule 30 (expression -> var_usage .)
    .               reduce using rule 30 (expression -> var_usage .)
    BOOL_AND        reduce using rule 30 (expression -> var_usage .)
    BOOL_OR         reduce using rule 30 (expression -> var_usage .)
    -               reduce using rule 30 (expression -> var_usage .)
    *               reduce using rule 30 (expression -> var_usage .)
    /               reduce using rule 30 (expression -> var_usage .)
    +               reduce using rule 30 (expression -> var_usage .)
    COMP_EQU        reduce using rule 30 (expression -> var_usage .)
    COMP_NEQU       reduce using rule 30 (expression -> var_usage .)
    COMP_LESS       reduce using rule 30 (expression -> var_usage .)
    COMP_GTR        reduce using rule 30 (expression -> var_usage .)
    COMP_LTE        reduce using rule 30 (expression -> var_usage .)
    COMP_GTE        reduce using rule 30 (expression -> var_usage .)
    ;               reduce using rule 30 (expression -> var_usage .)
    ,               reduce using rule 30 (expression -> var_usage .)
    ]               reduce using rule 30 (expression -> var_usage .)


state 23

    (10) statement -> print_statement . ;

    ;               shift and go to state 58


state 24

    (32) type -> TYPE .

    ID              reduce using rule 32 (type -> TYPE .)


state 25

    (52) expression -> ( . expression )
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 59

state 26

    (14) declaration -> simple_declaration .
    (17) assign_declaration -> simple_declaration . = expression

    ;               reduce using rule 14 (declaration -> simple_declaration .)
    =               shift and go to state 60


state 27

    (46) expression -> - . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 61

state 28

    (47) expression -> ! expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 47 (expression -> ! expression .)
    BOOL_AND        reduce using rule 47 (expression -> ! expression .)
    BOOL_OR         reduce using rule 47 (expression -> ! expression .)
    -               reduce using rule 47 (expression -> ! expression .)
    *               reduce using rule 47 (expression -> ! expression .)
    /               reduce using rule 47 (expression -> ! expression .)
    +               reduce using rule 47 (expression -> ! expression .)
    COMP_EQU        reduce using rule 47 (expression -> ! expression .)
    COMP_NEQU       reduce using rule 47 (expression -> ! expression .)
    COMP_LESS       reduce using rule 47 (expression -> ! expression .)
    COMP_GTR        reduce using rule 47 (expression -> ! expression .)
    COMP_LTE        reduce using rule 47 (expression -> ! expression .)
    COMP_GTE        reduce using rule 47 (expression -> ! expression .)
    ;               reduce using rule 47 (expression -> ! expression .)
    ,               reduce using rule 47 (expression -> ! expression .)
    ]               reduce using rule 47 (expression -> ! expression .)
    .               shift and go to state 45

  ! .               [ reduce using rule 47 (expression -> ! expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! -               [ shift and go to state 51 ]
  ! *               [ shift and go to state 47 ]
  ! /               [ shift and go to state 41 ]
  ! +               [ shift and go to state 50 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 29

    (20) statement -> COMMAND_WHILE ( . expression ) statement
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 62

state 30

    (11) print_statement -> COMMAND_PRINT ( . non_empty_comma_sep_expr )
    (12) non_empty_comma_sep_expr -> . expression
    (13) non_empty_comma_sep_expr -> . expression , non_empty_comma_sep_expr
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 63
    non_empty_comma_sep_expr       shift and go to state 64

state 31

    (5) statement -> COMMAND_BREAK ; .

    COMMAND_BREAK   reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    ;               reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    COMMAND_IF      reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    COMMAND_WHILE   reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    COMMAND_RANDOM  reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    VAL_LITERAL     reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    CHAR_LITERAL    reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    STRING_LITERAL  reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    -               reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    !               reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    (               reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    COMMAND_PRINT   reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    ID              reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    TYPE            reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    ALIAS_TYPE      reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    META_TYPE       reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    {               reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    $end            reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    }               reduce using rule 5 (statement -> COMMAND_BREAK ; .)
    COMMAND_ELSE    reduce using rule 5 (statement -> COMMAND_BREAK ; .)


state 32

    (22) var_usage -> ID [ . expression ]
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 65

state 33

    (16) simple_declaration -> type ID .

    =               reduce using rule 16 (simple_declaration -> type ID .)
    ;               reduce using rule 16 (simple_declaration -> type ID .)


state 34

    (4) statement -> scopeupbro { . statements }
    (2) statements -> .
    (3) statements -> . statements statement

    }               reduce using rule 2 (statements -> .)
    COMMAND_BREAK   reduce using rule 2 (statements -> .)
    ;               reduce using rule 2 (statements -> .)
    COMMAND_IF      reduce using rule 2 (statements -> .)
    COMMAND_WHILE   reduce using rule 2 (statements -> .)
    COMMAND_RANDOM  reduce using rule 2 (statements -> .)
    VAL_LITERAL     reduce using rule 2 (statements -> .)
    CHAR_LITERAL    reduce using rule 2 (statements -> .)
    STRING_LITERAL  reduce using rule 2 (statements -> .)
    -               reduce using rule 2 (statements -> .)
    !               reduce using rule 2 (statements -> .)
    (               reduce using rule 2 (statements -> .)
    COMMAND_PRINT   reduce using rule 2 (statements -> .)
    ID              reduce using rule 2 (statements -> .)
    TYPE            reduce using rule 2 (statements -> .)
    ALIAS_TYPE      reduce using rule 2 (statements -> .)
    META_TYPE       reduce using rule 2 (statements -> .)
    {               reduce using rule 2 (statements -> .)

    statements                     shift and go to state 66

state 35

    (34) type -> META_TYPE ( . TYPE )

    TYPE            shift and go to state 67


state 36

    (31) expression -> COMMAND_RANDOM ( . expression )
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 68

state 37

    (18) statement -> COMMAND_IF ( . expression ) statement
    (19) statement -> COMMAND_IF ( . expression ) statement COMMAND_ELSE statement
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 69

state 38

    (49) expression -> expression COMP_GTR . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 70

state 39

    (35) expression -> expression BOOL_AND . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 71

state 40

    (51) expression -> expression COMP_GTE . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 72

state 41

    (42) expression -> expression / . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 73

state 42

    (50) expression -> expression COMP_LTE . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 74

state 43

    (45) expression -> expression COMP_NEQU . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 75

state 44

    (8) statement -> expression ; .

    COMMAND_BREAK   reduce using rule 8 (statement -> expression ; .)
    ;               reduce using rule 8 (statement -> expression ; .)
    COMMAND_IF      reduce using rule 8 (statement -> expression ; .)
    COMMAND_WHILE   reduce using rule 8 (statement -> expression ; .)
    COMMAND_RANDOM  reduce using rule 8 (statement -> expression ; .)
    VAL_LITERAL     reduce using rule 8 (statement -> expression ; .)
    CHAR_LITERAL    reduce using rule 8 (statement -> expression ; .)
    STRING_LITERAL  reduce using rule 8 (statement -> expression ; .)
    -               reduce using rule 8 (statement -> expression ; .)
    !               reduce using rule 8 (statement -> expression ; .)
    (               reduce using rule 8 (statement -> expression ; .)
    COMMAND_PRINT   reduce using rule 8 (statement -> expression ; .)
    ID              reduce using rule 8 (statement -> expression ; .)
    TYPE            reduce using rule 8 (statement -> expression ; .)
    ALIAS_TYPE      reduce using rule 8 (statement -> expression ; .)
    META_TYPE       reduce using rule 8 (statement -> expression ; .)
    {               reduce using rule 8 (statement -> expression ; .)
    $end            reduce using rule 8 (statement -> expression ; .)
    }               reduce using rule 8 (statement -> expression ; .)
    COMMAND_ELSE    reduce using rule 8 (statement -> expression ; .)


state 45

    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )

    ID              shift and go to state 76


state 46

    (36) expression -> expression BOOL_OR . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 77

state 47

    (41) expression -> expression * . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 78

state 48

    (48) expression -> expression COMP_LESS . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 79

state 49

    (44) expression -> expression COMP_EQU . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 80

state 50

    (43) expression -> expression + . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 81

state 51

    (40) expression -> expression - . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 82

state 52

    (9) statement -> declaration ; .

    COMMAND_BREAK   reduce using rule 9 (statement -> declaration ; .)
    ;               reduce using rule 9 (statement -> declaration ; .)
    COMMAND_IF      reduce using rule 9 (statement -> declaration ; .)
    COMMAND_WHILE   reduce using rule 9 (statement -> declaration ; .)
    COMMAND_RANDOM  reduce using rule 9 (statement -> declaration ; .)
    VAL_LITERAL     reduce using rule 9 (statement -> declaration ; .)
    CHAR_LITERAL    reduce using rule 9 (statement -> declaration ; .)
    STRING_LITERAL  reduce using rule 9 (statement -> declaration ; .)
    -               reduce using rule 9 (statement -> declaration ; .)
    !               reduce using rule 9 (statement -> declaration ; .)
    (               reduce using rule 9 (statement -> declaration ; .)
    COMMAND_PRINT   reduce using rule 9 (statement -> declaration ; .)
    ID              reduce using rule 9 (statement -> declaration ; .)
    TYPE            reduce using rule 9 (statement -> declaration ; .)
    ALIAS_TYPE      reduce using rule 9 (statement -> declaration ; .)
    META_TYPE       reduce using rule 9 (statement -> declaration ; .)
    {               reduce using rule 9 (statement -> declaration ; .)
    $end            reduce using rule 9 (statement -> declaration ; .)
    }               reduce using rule 9 (statement -> declaration ; .)
    COMMAND_ELSE    reduce using rule 9 (statement -> declaration ; .)


state 53

    (27) expression -> var_usage ASSIGN_SUB . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 83

state 54

    (29) expression -> var_usage ASSIGN_DIV . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 84

state 55

    (26) expression -> var_usage ASSIGN_ADD . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 85

state 56

    (28) expression -> var_usage ASSIGN_MULT . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 86

state 57

    (23) expression -> var_usage = . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 87

state 58

    (10) statement -> print_statement ; .

    COMMAND_BREAK   reduce using rule 10 (statement -> print_statement ; .)
    ;               reduce using rule 10 (statement -> print_statement ; .)
    COMMAND_IF      reduce using rule 10 (statement -> print_statement ; .)
    COMMAND_WHILE   reduce using rule 10 (statement -> print_statement ; .)
    COMMAND_RANDOM  reduce using rule 10 (statement -> print_statement ; .)
    VAL_LITERAL     reduce using rule 10 (statement -> print_statement ; .)
    CHAR_LITERAL    reduce using rule 10 (statement -> print_statement ; .)
    STRING_LITERAL  reduce using rule 10 (statement -> print_statement ; .)
    -               reduce using rule 10 (statement -> print_statement ; .)
    !               reduce using rule 10 (statement -> print_statement ; .)
    (               reduce using rule 10 (statement -> print_statement ; .)
    COMMAND_PRINT   reduce using rule 10 (statement -> print_statement ; .)
    ID              reduce using rule 10 (statement -> print_statement ; .)
    TYPE            reduce using rule 10 (statement -> print_statement ; .)
    ALIAS_TYPE      reduce using rule 10 (statement -> print_statement ; .)
    META_TYPE       reduce using rule 10 (statement -> print_statement ; .)
    {               reduce using rule 10 (statement -> print_statement ; .)
    $end            reduce using rule 10 (statement -> print_statement ; .)
    }               reduce using rule 10 (statement -> print_statement ; .)
    COMMAND_ELSE    reduce using rule 10 (statement -> print_statement ; .)


state 59

    (52) expression -> ( expression . )
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               shift and go to state 88
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40


state 60

    (17) assign_declaration -> simple_declaration = . expression
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    expression                     shift and go to state 89
    var_usage                      shift and go to state 22

state 61

    (46) expression -> - expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 46 (expression -> - expression .)
    BOOL_AND        reduce using rule 46 (expression -> - expression .)
    BOOL_OR         reduce using rule 46 (expression -> - expression .)
    -               reduce using rule 46 (expression -> - expression .)
    *               reduce using rule 46 (expression -> - expression .)
    /               reduce using rule 46 (expression -> - expression .)
    +               reduce using rule 46 (expression -> - expression .)
    COMP_EQU        reduce using rule 46 (expression -> - expression .)
    COMP_NEQU       reduce using rule 46 (expression -> - expression .)
    COMP_LESS       reduce using rule 46 (expression -> - expression .)
    COMP_GTR        reduce using rule 46 (expression -> - expression .)
    COMP_LTE        reduce using rule 46 (expression -> - expression .)
    COMP_GTE        reduce using rule 46 (expression -> - expression .)
    ;               reduce using rule 46 (expression -> - expression .)
    ,               reduce using rule 46 (expression -> - expression .)
    ]               reduce using rule 46 (expression -> - expression .)
    .               shift and go to state 45

  ! .               [ reduce using rule 46 (expression -> - expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! -               [ shift and go to state 51 ]
  ! *               [ shift and go to state 47 ]
  ! /               [ shift and go to state 41 ]
  ! +               [ shift and go to state 50 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 62

    (20) statement -> COMMAND_WHILE ( expression . ) statement
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               shift and go to state 90
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40


state 63

    (12) non_empty_comma_sep_expr -> expression .
    (13) non_empty_comma_sep_expr -> expression . , non_empty_comma_sep_expr
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 12 (non_empty_comma_sep_expr -> expression .)
    ,               shift and go to state 91
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40


state 64

    (11) print_statement -> COMMAND_PRINT ( non_empty_comma_sep_expr . )

    )               shift and go to state 92


state 65

    (22) var_usage -> ID [ expression . ]
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    ]               shift and go to state 93
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40


state 66

    (4) statement -> scopeupbro { statements . }
    (3) statements -> statements . statement
    (4) statement -> . scopeupbro { statements }
    (5) statement -> . COMMAND_BREAK ;
    (7) statement -> . ;
    (8) statement -> . expression ;
    (9) statement -> . declaration ;
    (10) statement -> . print_statement ;
    (18) statement -> . COMMAND_IF ( expression ) statement
    (19) statement -> . COMMAND_IF ( expression ) statement COMMAND_ELSE statement
    (20) statement -> . COMMAND_WHILE ( expression ) statement
    (6) scopeupbro -> .
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (14) declaration -> . simple_declaration
    (15) declaration -> . assign_declaration
    (11) print_statement -> . COMMAND_PRINT ( non_empty_comma_sep_expr )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]
    (16) simple_declaration -> . type ID
    (17) assign_declaration -> . simple_declaration = expression
    (32) type -> . TYPE
    (33) type -> . ALIAS_TYPE
    (34) type -> . META_TYPE ( TYPE )

    }               shift and go to state 94
    COMMAND_BREAK   shift and go to state 6
    ;               shift and go to state 10
    COMMAND_IF      shift and go to state 15
    COMMAND_WHILE   shift and go to state 4
    {               reduce using rule 6 (scopeupbro -> .)
    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    COMMAND_PRINT   shift and go to state 5
    ID              shift and go to state 7
    TYPE            shift and go to state 24
    ALIAS_TYPE      shift and go to state 18
    META_TYPE       shift and go to state 13

    scopeupbro                     shift and go to state 11
    statement                      shift and go to state 20
    simple_declaration             shift and go to state 26
    expression                     shift and go to state 17
    print_statement                shift and go to state 23
    var_usage                      shift and go to state 22
    declaration                    shift and go to state 19
    assign_declaration             shift and go to state 21
    type                           shift and go to state 8

state 67

    (34) type -> META_TYPE ( TYPE . )

    )               shift and go to state 95


state 68

    (31) expression -> COMMAND_RANDOM ( expression . )
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               shift and go to state 96
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40


state 69

    (18) statement -> COMMAND_IF ( expression . ) statement
    (19) statement -> COMMAND_IF ( expression . ) statement COMMAND_ELSE statement
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               shift and go to state 97
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40


state 70

    (49) expression -> expression COMP_GTR expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 49 (expression -> expression COMP_GTR expression .)
    BOOL_AND        reduce using rule 49 (expression -> expression COMP_GTR expression .)
    BOOL_OR         reduce using rule 49 (expression -> expression COMP_GTR expression .)
    COMP_EQU        reduce using rule 49 (expression -> expression COMP_GTR expression .)
    COMP_NEQU       reduce using rule 49 (expression -> expression COMP_GTR expression .)
    COMP_LESS       reduce using rule 49 (expression -> expression COMP_GTR expression .)
    COMP_GTR        reduce using rule 49 (expression -> expression COMP_GTR expression .)
    COMP_LTE        reduce using rule 49 (expression -> expression COMP_GTR expression .)
    COMP_GTE        reduce using rule 49 (expression -> expression COMP_GTR expression .)
    ;               reduce using rule 49 (expression -> expression COMP_GTR expression .)
    ,               reduce using rule 49 (expression -> expression COMP_GTR expression .)
    ]               reduce using rule 49 (expression -> expression COMP_GTR expression .)
    .               shift and go to state 45
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50

  ! .               [ reduce using rule 49 (expression -> expression COMP_GTR expression .) ]
  ! -               [ reduce using rule 49 (expression -> expression COMP_GTR expression .) ]
  ! *               [ reduce using rule 49 (expression -> expression COMP_GTR expression .) ]
  ! /               [ reduce using rule 49 (expression -> expression COMP_GTR expression .) ]
  ! +               [ reduce using rule 49 (expression -> expression COMP_GTR expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 71

    (35) expression -> expression BOOL_AND expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 35 (expression -> expression BOOL_AND expression .)
    BOOL_AND        reduce using rule 35 (expression -> expression BOOL_AND expression .)
    BOOL_OR         reduce using rule 35 (expression -> expression BOOL_AND expression .)
    ;               reduce using rule 35 (expression -> expression BOOL_AND expression .)
    ,               reduce using rule 35 (expression -> expression BOOL_AND expression .)
    ]               reduce using rule 35 (expression -> expression BOOL_AND expression .)
    .               shift and go to state 45
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40

  ! .               [ reduce using rule 35 (expression -> expression BOOL_AND expression .) ]
  ! -               [ reduce using rule 35 (expression -> expression BOOL_AND expression .) ]
  ! *               [ reduce using rule 35 (expression -> expression BOOL_AND expression .) ]
  ! /               [ reduce using rule 35 (expression -> expression BOOL_AND expression .) ]
  ! +               [ reduce using rule 35 (expression -> expression BOOL_AND expression .) ]
  ! COMP_EQU        [ reduce using rule 35 (expression -> expression BOOL_AND expression .) ]
  ! COMP_NEQU       [ reduce using rule 35 (expression -> expression BOOL_AND expression .) ]
  ! COMP_LESS       [ reduce using rule 35 (expression -> expression BOOL_AND expression .) ]
  ! COMP_GTR        [ reduce using rule 35 (expression -> expression BOOL_AND expression .) ]
  ! COMP_LTE        [ reduce using rule 35 (expression -> expression BOOL_AND expression .) ]
  ! COMP_GTE        [ reduce using rule 35 (expression -> expression BOOL_AND expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]


state 72

    (51) expression -> expression COMP_GTE expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 51 (expression -> expression COMP_GTE expression .)
    BOOL_AND        reduce using rule 51 (expression -> expression COMP_GTE expression .)
    BOOL_OR         reduce using rule 51 (expression -> expression COMP_GTE expression .)
    COMP_EQU        reduce using rule 51 (expression -> expression COMP_GTE expression .)
    COMP_NEQU       reduce using rule 51 (expression -> expression COMP_GTE expression .)
    COMP_LESS       reduce using rule 51 (expression -> expression COMP_GTE expression .)
    COMP_GTR        reduce using rule 51 (expression -> expression COMP_GTE expression .)
    COMP_LTE        reduce using rule 51 (expression -> expression COMP_GTE expression .)
    COMP_GTE        reduce using rule 51 (expression -> expression COMP_GTE expression .)
    ;               reduce using rule 51 (expression -> expression COMP_GTE expression .)
    ,               reduce using rule 51 (expression -> expression COMP_GTE expression .)
    ]               reduce using rule 51 (expression -> expression COMP_GTE expression .)
    .               shift and go to state 45
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50

  ! .               [ reduce using rule 51 (expression -> expression COMP_GTE expression .) ]
  ! -               [ reduce using rule 51 (expression -> expression COMP_GTE expression .) ]
  ! *               [ reduce using rule 51 (expression -> expression COMP_GTE expression .) ]
  ! /               [ reduce using rule 51 (expression -> expression COMP_GTE expression .) ]
  ! +               [ reduce using rule 51 (expression -> expression COMP_GTE expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 73

    (42) expression -> expression / expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 42 (expression -> expression / expression .)
    BOOL_AND        reduce using rule 42 (expression -> expression / expression .)
    BOOL_OR         reduce using rule 42 (expression -> expression / expression .)
    -               reduce using rule 42 (expression -> expression / expression .)
    *               reduce using rule 42 (expression -> expression / expression .)
    /               reduce using rule 42 (expression -> expression / expression .)
    +               reduce using rule 42 (expression -> expression / expression .)
    COMP_EQU        reduce using rule 42 (expression -> expression / expression .)
    COMP_NEQU       reduce using rule 42 (expression -> expression / expression .)
    COMP_LESS       reduce using rule 42 (expression -> expression / expression .)
    COMP_GTR        reduce using rule 42 (expression -> expression / expression .)
    COMP_LTE        reduce using rule 42 (expression -> expression / expression .)
    COMP_GTE        reduce using rule 42 (expression -> expression / expression .)
    ;               reduce using rule 42 (expression -> expression / expression .)
    ,               reduce using rule 42 (expression -> expression / expression .)
    ]               reduce using rule 42 (expression -> expression / expression .)
    .               shift and go to state 45

  ! .               [ reduce using rule 42 (expression -> expression / expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! -               [ shift and go to state 51 ]
  ! *               [ shift and go to state 47 ]
  ! /               [ shift and go to state 41 ]
  ! +               [ shift and go to state 50 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 74

    (50) expression -> expression COMP_LTE expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 50 (expression -> expression COMP_LTE expression .)
    BOOL_AND        reduce using rule 50 (expression -> expression COMP_LTE expression .)
    BOOL_OR         reduce using rule 50 (expression -> expression COMP_LTE expression .)
    COMP_EQU        reduce using rule 50 (expression -> expression COMP_LTE expression .)
    COMP_NEQU       reduce using rule 50 (expression -> expression COMP_LTE expression .)
    COMP_LESS       reduce using rule 50 (expression -> expression COMP_LTE expression .)
    COMP_GTR        reduce using rule 50 (expression -> expression COMP_LTE expression .)
    COMP_LTE        reduce using rule 50 (expression -> expression COMP_LTE expression .)
    COMP_GTE        reduce using rule 50 (expression -> expression COMP_LTE expression .)
    ;               reduce using rule 50 (expression -> expression COMP_LTE expression .)
    ,               reduce using rule 50 (expression -> expression COMP_LTE expression .)
    ]               reduce using rule 50 (expression -> expression COMP_LTE expression .)
    .               shift and go to state 45
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50

  ! .               [ reduce using rule 50 (expression -> expression COMP_LTE expression .) ]
  ! -               [ reduce using rule 50 (expression -> expression COMP_LTE expression .) ]
  ! *               [ reduce using rule 50 (expression -> expression COMP_LTE expression .) ]
  ! /               [ reduce using rule 50 (expression -> expression COMP_LTE expression .) ]
  ! +               [ reduce using rule 50 (expression -> expression COMP_LTE expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 75

    (45) expression -> expression COMP_NEQU expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    BOOL_AND        reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    BOOL_OR         reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    COMP_EQU        reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    COMP_NEQU       reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    COMP_LESS       reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    COMP_GTR        reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    COMP_LTE        reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    COMP_GTE        reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    ;               reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    ,               reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    ]               reduce using rule 45 (expression -> expression COMP_NEQU expression .)
    .               shift and go to state 45
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50

  ! .               [ reduce using rule 45 (expression -> expression COMP_NEQU expression .) ]
  ! -               [ reduce using rule 45 (expression -> expression COMP_NEQU expression .) ]
  ! *               [ reduce using rule 45 (expression -> expression COMP_NEQU expression .) ]
  ! /               [ reduce using rule 45 (expression -> expression COMP_NEQU expression .) ]
  ! +               [ reduce using rule 45 (expression -> expression COMP_NEQU expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 76

    (24) expression -> expression . ID . ( )
    (25) expression -> expression . ID . ( expression )

    (               shift and go to state 98


state 77

    (36) expression -> expression BOOL_OR expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 36 (expression -> expression BOOL_OR expression .)
    BOOL_OR         reduce using rule 36 (expression -> expression BOOL_OR expression .)
    ;               reduce using rule 36 (expression -> expression BOOL_OR expression .)
    ,               reduce using rule 36 (expression -> expression BOOL_OR expression .)
    ]               reduce using rule 36 (expression -> expression BOOL_OR expression .)
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40

  ! .               [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! BOOL_AND        [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! -               [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! *               [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! /               [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! +               [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! COMP_EQU        [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! COMP_NEQU       [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! COMP_LESS       [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! COMP_GTR        [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! COMP_LTE        [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! COMP_GTE        [ reduce using rule 36 (expression -> expression BOOL_OR expression .) ]
  ! BOOL_OR         [ shift and go to state 46 ]


state 78

    (41) expression -> expression * expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 41 (expression -> expression * expression .)
    BOOL_AND        reduce using rule 41 (expression -> expression * expression .)
    BOOL_OR         reduce using rule 41 (expression -> expression * expression .)
    -               reduce using rule 41 (expression -> expression * expression .)
    *               reduce using rule 41 (expression -> expression * expression .)
    /               reduce using rule 41 (expression -> expression * expression .)
    +               reduce using rule 41 (expression -> expression * expression .)
    COMP_EQU        reduce using rule 41 (expression -> expression * expression .)
    COMP_NEQU       reduce using rule 41 (expression -> expression * expression .)
    COMP_LESS       reduce using rule 41 (expression -> expression * expression .)
    COMP_GTR        reduce using rule 41 (expression -> expression * expression .)
    COMP_LTE        reduce using rule 41 (expression -> expression * expression .)
    COMP_GTE        reduce using rule 41 (expression -> expression * expression .)
    ;               reduce using rule 41 (expression -> expression * expression .)
    ,               reduce using rule 41 (expression -> expression * expression .)
    ]               reduce using rule 41 (expression -> expression * expression .)
    .               shift and go to state 45

  ! .               [ reduce using rule 41 (expression -> expression * expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! -               [ shift and go to state 51 ]
  ! *               [ shift and go to state 47 ]
  ! /               [ shift and go to state 41 ]
  ! +               [ shift and go to state 50 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 79

    (48) expression -> expression COMP_LESS expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 48 (expression -> expression COMP_LESS expression .)
    BOOL_AND        reduce using rule 48 (expression -> expression COMP_LESS expression .)
    BOOL_OR         reduce using rule 48 (expression -> expression COMP_LESS expression .)
    COMP_EQU        reduce using rule 48 (expression -> expression COMP_LESS expression .)
    COMP_NEQU       reduce using rule 48 (expression -> expression COMP_LESS expression .)
    COMP_LESS       reduce using rule 48 (expression -> expression COMP_LESS expression .)
    COMP_GTR        reduce using rule 48 (expression -> expression COMP_LESS expression .)
    COMP_LTE        reduce using rule 48 (expression -> expression COMP_LESS expression .)
    COMP_GTE        reduce using rule 48 (expression -> expression COMP_LESS expression .)
    ;               reduce using rule 48 (expression -> expression COMP_LESS expression .)
    ,               reduce using rule 48 (expression -> expression COMP_LESS expression .)
    ]               reduce using rule 48 (expression -> expression COMP_LESS expression .)
    .               shift and go to state 45
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50

  ! .               [ reduce using rule 48 (expression -> expression COMP_LESS expression .) ]
  ! -               [ reduce using rule 48 (expression -> expression COMP_LESS expression .) ]
  ! *               [ reduce using rule 48 (expression -> expression COMP_LESS expression .) ]
  ! /               [ reduce using rule 48 (expression -> expression COMP_LESS expression .) ]
  ! +               [ reduce using rule 48 (expression -> expression COMP_LESS expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 80

    (44) expression -> expression COMP_EQU expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 44 (expression -> expression COMP_EQU expression .)
    BOOL_AND        reduce using rule 44 (expression -> expression COMP_EQU expression .)
    BOOL_OR         reduce using rule 44 (expression -> expression COMP_EQU expression .)
    COMP_EQU        reduce using rule 44 (expression -> expression COMP_EQU expression .)
    COMP_NEQU       reduce using rule 44 (expression -> expression COMP_EQU expression .)
    COMP_LESS       reduce using rule 44 (expression -> expression COMP_EQU expression .)
    COMP_GTR        reduce using rule 44 (expression -> expression COMP_EQU expression .)
    COMP_LTE        reduce using rule 44 (expression -> expression COMP_EQU expression .)
    COMP_GTE        reduce using rule 44 (expression -> expression COMP_EQU expression .)
    ;               reduce using rule 44 (expression -> expression COMP_EQU expression .)
    ,               reduce using rule 44 (expression -> expression COMP_EQU expression .)
    ]               reduce using rule 44 (expression -> expression COMP_EQU expression .)
    .               shift and go to state 45
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50

  ! .               [ reduce using rule 44 (expression -> expression COMP_EQU expression .) ]
  ! -               [ reduce using rule 44 (expression -> expression COMP_EQU expression .) ]
  ! *               [ reduce using rule 44 (expression -> expression COMP_EQU expression .) ]
  ! /               [ reduce using rule 44 (expression -> expression COMP_EQU expression .) ]
  ! +               [ reduce using rule 44 (expression -> expression COMP_EQU expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 81

    (43) expression -> expression + expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 43 (expression -> expression + expression .)
    BOOL_AND        reduce using rule 43 (expression -> expression + expression .)
    BOOL_OR         reduce using rule 43 (expression -> expression + expression .)
    -               reduce using rule 43 (expression -> expression + expression .)
    +               reduce using rule 43 (expression -> expression + expression .)
    COMP_EQU        reduce using rule 43 (expression -> expression + expression .)
    COMP_NEQU       reduce using rule 43 (expression -> expression + expression .)
    COMP_LESS       reduce using rule 43 (expression -> expression + expression .)
    COMP_GTR        reduce using rule 43 (expression -> expression + expression .)
    COMP_LTE        reduce using rule 43 (expression -> expression + expression .)
    COMP_GTE        reduce using rule 43 (expression -> expression + expression .)
    ;               reduce using rule 43 (expression -> expression + expression .)
    ,               reduce using rule 43 (expression -> expression + expression .)
    ]               reduce using rule 43 (expression -> expression + expression .)
    .               shift and go to state 45
    *               shift and go to state 47
    /               shift and go to state 41

  ! .               [ reduce using rule 43 (expression -> expression + expression .) ]
  ! *               [ reduce using rule 43 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 43 (expression -> expression + expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! -               [ shift and go to state 51 ]
  ! +               [ shift and go to state 50 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 82

    (40) expression -> expression - expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 40 (expression -> expression - expression .)
    BOOL_AND        reduce using rule 40 (expression -> expression - expression .)
    BOOL_OR         reduce using rule 40 (expression -> expression - expression .)
    -               reduce using rule 40 (expression -> expression - expression .)
    +               reduce using rule 40 (expression -> expression - expression .)
    COMP_EQU        reduce using rule 40 (expression -> expression - expression .)
    COMP_NEQU       reduce using rule 40 (expression -> expression - expression .)
    COMP_LESS       reduce using rule 40 (expression -> expression - expression .)
    COMP_GTR        reduce using rule 40 (expression -> expression - expression .)
    COMP_LTE        reduce using rule 40 (expression -> expression - expression .)
    COMP_GTE        reduce using rule 40 (expression -> expression - expression .)
    ;               reduce using rule 40 (expression -> expression - expression .)
    ,               reduce using rule 40 (expression -> expression - expression .)
    ]               reduce using rule 40 (expression -> expression - expression .)
    .               shift and go to state 45
    *               shift and go to state 47
    /               shift and go to state 41

  ! .               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! *               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! BOOL_AND        [ shift and go to state 39 ]
  ! BOOL_OR         [ shift and go to state 46 ]
  ! -               [ shift and go to state 51 ]
  ! +               [ shift and go to state 50 ]
  ! COMP_EQU        [ shift and go to state 49 ]
  ! COMP_NEQU       [ shift and go to state 43 ]
  ! COMP_LESS       [ shift and go to state 48 ]
  ! COMP_GTR        [ shift and go to state 38 ]
  ! COMP_LTE        [ shift and go to state 42 ]
  ! COMP_GTE        [ shift and go to state 40 ]


state 83

    (27) expression -> var_usage ASSIGN_SUB expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .)
    ;               reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .)
    ,               reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .)
    ]               reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .)
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40

  ! .               [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! BOOL_AND        [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! BOOL_OR         [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! -               [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! *               [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! /               [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! +               [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! COMP_EQU        [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! COMP_NEQU       [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! COMP_LESS       [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! COMP_GTR        [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! COMP_LTE        [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]
  ! COMP_GTE        [ reduce using rule 27 (expression -> var_usage ASSIGN_SUB expression .) ]


state 84

    (29) expression -> var_usage ASSIGN_DIV expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .)
    ;               reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .)
    ,               reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .)
    ]               reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .)
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40

  ! .               [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! BOOL_AND        [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! BOOL_OR         [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! -               [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! *               [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! /               [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! +               [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! COMP_EQU        [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! COMP_NEQU       [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! COMP_LESS       [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! COMP_GTR        [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! COMP_LTE        [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]
  ! COMP_GTE        [ reduce using rule 29 (expression -> var_usage ASSIGN_DIV expression .) ]


state 85

    (26) expression -> var_usage ASSIGN_ADD expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .)
    ;               reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .)
    ,               reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .)
    ]               reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .)
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40

  ! .               [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! BOOL_AND        [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! BOOL_OR         [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! -               [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! *               [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! /               [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! +               [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! COMP_EQU        [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! COMP_NEQU       [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! COMP_LESS       [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! COMP_GTR        [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! COMP_LTE        [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]
  ! COMP_GTE        [ reduce using rule 26 (expression -> var_usage ASSIGN_ADD expression .) ]


state 86

    (28) expression -> var_usage ASSIGN_MULT expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .)
    ;               reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .)
    ,               reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .)
    ]               reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .)
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40

  ! .               [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! BOOL_AND        [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! BOOL_OR         [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! -               [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! *               [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! /               [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! +               [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! COMP_EQU        [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! COMP_NEQU       [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! COMP_LESS       [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! COMP_GTR        [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! COMP_LTE        [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]
  ! COMP_GTE        [ reduce using rule 28 (expression -> var_usage ASSIGN_MULT expression .) ]


state 87

    (23) expression -> var_usage = expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               reduce using rule 23 (expression -> var_usage = expression .)
    ;               reduce using rule 23 (expression -> var_usage = expression .)
    ,               reduce using rule 23 (expression -> var_usage = expression .)
    ]               reduce using rule 23 (expression -> var_usage = expression .)
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40

  ! .               [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! BOOL_AND        [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! BOOL_OR         [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! -               [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! *               [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! /               [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! +               [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! COMP_EQU        [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! COMP_NEQU       [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! COMP_LESS       [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! COMP_GTR        [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! COMP_LTE        [ reduce using rule 23 (expression -> var_usage = expression .) ]
  ! COMP_GTE        [ reduce using rule 23 (expression -> var_usage = expression .) ]


state 88

    (52) expression -> ( expression ) .

    )               reduce using rule 52 (expression -> ( expression ) .)
    .               reduce using rule 52 (expression -> ( expression ) .)
    BOOL_AND        reduce using rule 52 (expression -> ( expression ) .)
    BOOL_OR         reduce using rule 52 (expression -> ( expression ) .)
    -               reduce using rule 52 (expression -> ( expression ) .)
    *               reduce using rule 52 (expression -> ( expression ) .)
    /               reduce using rule 52 (expression -> ( expression ) .)
    +               reduce using rule 52 (expression -> ( expression ) .)
    COMP_EQU        reduce using rule 52 (expression -> ( expression ) .)
    COMP_NEQU       reduce using rule 52 (expression -> ( expression ) .)
    COMP_LESS       reduce using rule 52 (expression -> ( expression ) .)
    COMP_GTR        reduce using rule 52 (expression -> ( expression ) .)
    COMP_LTE        reduce using rule 52 (expression -> ( expression ) .)
    COMP_GTE        reduce using rule 52 (expression -> ( expression ) .)
    ;               reduce using rule 52 (expression -> ( expression ) .)
    ,               reduce using rule 52 (expression -> ( expression ) .)
    ]               reduce using rule 52 (expression -> ( expression ) .)


state 89

    (17) assign_declaration -> simple_declaration = expression .
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    ;               reduce using rule 17 (assign_declaration -> simple_declaration = expression .)
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40


state 90

    (20) statement -> COMMAND_WHILE ( expression ) . statement
    (4) statement -> . scopeupbro { statements }
    (5) statement -> . COMMAND_BREAK ;
    (7) statement -> . ;
    (8) statement -> . expression ;
    (9) statement -> . declaration ;
    (10) statement -> . print_statement ;
    (18) statement -> . COMMAND_IF ( expression ) statement
    (19) statement -> . COMMAND_IF ( expression ) statement COMMAND_ELSE statement
    (20) statement -> . COMMAND_WHILE ( expression ) statement
    (6) scopeupbro -> .
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (14) declaration -> . simple_declaration
    (15) declaration -> . assign_declaration
    (11) print_statement -> . COMMAND_PRINT ( non_empty_comma_sep_expr )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]
    (16) simple_declaration -> . type ID
    (17) assign_declaration -> . simple_declaration = expression
    (32) type -> . TYPE
    (33) type -> . ALIAS_TYPE
    (34) type -> . META_TYPE ( TYPE )

    COMMAND_BREAK   shift and go to state 6
    ;               shift and go to state 10
    COMMAND_IF      shift and go to state 15
    COMMAND_WHILE   shift and go to state 4
    {               reduce using rule 6 (scopeupbro -> .)
    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    COMMAND_PRINT   shift and go to state 5
    ID              shift and go to state 7
    TYPE            shift and go to state 24
    ALIAS_TYPE      shift and go to state 18
    META_TYPE       shift and go to state 13

    scopeupbro                     shift and go to state 11
    statement                      shift and go to state 99
    simple_declaration             shift and go to state 26
    expression                     shift and go to state 17
    print_statement                shift and go to state 23
    var_usage                      shift and go to state 22
    declaration                    shift and go to state 19
    assign_declaration             shift and go to state 21
    type                           shift and go to state 8

state 91

    (13) non_empty_comma_sep_expr -> expression , . non_empty_comma_sep_expr
    (12) non_empty_comma_sep_expr -> . expression
    (13) non_empty_comma_sep_expr -> . expression , non_empty_comma_sep_expr
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 63
    non_empty_comma_sep_expr       shift and go to state 100

state 92

    (11) print_statement -> COMMAND_PRINT ( non_empty_comma_sep_expr ) .

    ;               reduce using rule 11 (print_statement -> COMMAND_PRINT ( non_empty_comma_sep_expr ) .)


state 93

    (22) var_usage -> ID [ expression ] .

    =               reduce using rule 22 (var_usage -> ID [ expression ] .)
    ASSIGN_ADD      reduce using rule 22 (var_usage -> ID [ expression ] .)
    ASSIGN_SUB      reduce using rule 22 (var_usage -> ID [ expression ] .)
    ASSIGN_MULT     reduce using rule 22 (var_usage -> ID [ expression ] .)
    ASSIGN_DIV      reduce using rule 22 (var_usage -> ID [ expression ] .)
    )               reduce using rule 22 (var_usage -> ID [ expression ] .)
    .               reduce using rule 22 (var_usage -> ID [ expression ] .)
    BOOL_AND        reduce using rule 22 (var_usage -> ID [ expression ] .)
    BOOL_OR         reduce using rule 22 (var_usage -> ID [ expression ] .)
    -               reduce using rule 22 (var_usage -> ID [ expression ] .)
    *               reduce using rule 22 (var_usage -> ID [ expression ] .)
    /               reduce using rule 22 (var_usage -> ID [ expression ] .)
    +               reduce using rule 22 (var_usage -> ID [ expression ] .)
    COMP_EQU        reduce using rule 22 (var_usage -> ID [ expression ] .)
    COMP_NEQU       reduce using rule 22 (var_usage -> ID [ expression ] .)
    COMP_LESS       reduce using rule 22 (var_usage -> ID [ expression ] .)
    COMP_GTR        reduce using rule 22 (var_usage -> ID [ expression ] .)
    COMP_LTE        reduce using rule 22 (var_usage -> ID [ expression ] .)
    COMP_GTE        reduce using rule 22 (var_usage -> ID [ expression ] .)
    ;               reduce using rule 22 (var_usage -> ID [ expression ] .)
    ,               reduce using rule 22 (var_usage -> ID [ expression ] .)
    ]               reduce using rule 22 (var_usage -> ID [ expression ] .)


state 94

    (4) statement -> scopeupbro { statements } .

    COMMAND_BREAK   reduce using rule 4 (statement -> scopeupbro { statements } .)
    ;               reduce using rule 4 (statement -> scopeupbro { statements } .)
    COMMAND_IF      reduce using rule 4 (statement -> scopeupbro { statements } .)
    COMMAND_WHILE   reduce using rule 4 (statement -> scopeupbro { statements } .)
    COMMAND_RANDOM  reduce using rule 4 (statement -> scopeupbro { statements } .)
    VAL_LITERAL     reduce using rule 4 (statement -> scopeupbro { statements } .)
    CHAR_LITERAL    reduce using rule 4 (statement -> scopeupbro { statements } .)
    STRING_LITERAL  reduce using rule 4 (statement -> scopeupbro { statements } .)
    -               reduce using rule 4 (statement -> scopeupbro { statements } .)
    !               reduce using rule 4 (statement -> scopeupbro { statements } .)
    (               reduce using rule 4 (statement -> scopeupbro { statements } .)
    COMMAND_PRINT   reduce using rule 4 (statement -> scopeupbro { statements } .)
    ID              reduce using rule 4 (statement -> scopeupbro { statements } .)
    TYPE            reduce using rule 4 (statement -> scopeupbro { statements } .)
    ALIAS_TYPE      reduce using rule 4 (statement -> scopeupbro { statements } .)
    META_TYPE       reduce using rule 4 (statement -> scopeupbro { statements } .)
    {               reduce using rule 4 (statement -> scopeupbro { statements } .)
    $end            reduce using rule 4 (statement -> scopeupbro { statements } .)
    }               reduce using rule 4 (statement -> scopeupbro { statements } .)
    COMMAND_ELSE    reduce using rule 4 (statement -> scopeupbro { statements } .)


state 95

    (34) type -> META_TYPE ( TYPE ) .

    ID              reduce using rule 34 (type -> META_TYPE ( TYPE ) .)


state 96

    (31) expression -> COMMAND_RANDOM ( expression ) .

    )               reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    .               reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    BOOL_AND        reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    BOOL_OR         reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    -               reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    *               reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    /               reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    +               reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    COMP_EQU        reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    COMP_NEQU       reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    COMP_LESS       reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    COMP_GTR        reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    COMP_LTE        reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    COMP_GTE        reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    ;               reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    ,               reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)
    ]               reduce using rule 31 (expression -> COMMAND_RANDOM ( expression ) .)


state 97

    (18) statement -> COMMAND_IF ( expression ) . statement
    (19) statement -> COMMAND_IF ( expression ) . statement COMMAND_ELSE statement
    (4) statement -> . scopeupbro { statements }
    (5) statement -> . COMMAND_BREAK ;
    (7) statement -> . ;
    (8) statement -> . expression ;
    (9) statement -> . declaration ;
    (10) statement -> . print_statement ;
    (18) statement -> . COMMAND_IF ( expression ) statement
    (19) statement -> . COMMAND_IF ( expression ) statement COMMAND_ELSE statement
    (20) statement -> . COMMAND_WHILE ( expression ) statement
    (6) scopeupbro -> .
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (14) declaration -> . simple_declaration
    (15) declaration -> . assign_declaration
    (11) print_statement -> . COMMAND_PRINT ( non_empty_comma_sep_expr )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]
    (16) simple_declaration -> . type ID
    (17) assign_declaration -> . simple_declaration = expression
    (32) type -> . TYPE
    (33) type -> . ALIAS_TYPE
    (34) type -> . META_TYPE ( TYPE )

    COMMAND_BREAK   shift and go to state 6
    ;               shift and go to state 10
    COMMAND_IF      shift and go to state 15
    COMMAND_WHILE   shift and go to state 4
    {               reduce using rule 6 (scopeupbro -> .)
    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    COMMAND_PRINT   shift and go to state 5
    ID              shift and go to state 7
    TYPE            shift and go to state 24
    ALIAS_TYPE      shift and go to state 18
    META_TYPE       shift and go to state 13

    scopeupbro                     shift and go to state 11
    statement                      shift and go to state 101
    simple_declaration             shift and go to state 26
    expression                     shift and go to state 17
    print_statement                shift and go to state 23
    var_usage                      shift and go to state 22
    declaration                    shift and go to state 19
    assign_declaration             shift and go to state 21
    type                           shift and go to state 8

state 98

    (24) expression -> expression . ID ( . )
    (25) expression -> expression . ID ( . expression )
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]

    )               shift and go to state 103
    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    ID              shift and go to state 7

    var_usage                      shift and go to state 22
    expression                     shift and go to state 102

state 99

    (20) statement -> COMMAND_WHILE ( expression ) statement .

    COMMAND_BREAK   reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    ;               reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    COMMAND_IF      reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    COMMAND_WHILE   reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    COMMAND_RANDOM  reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    VAL_LITERAL     reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    CHAR_LITERAL    reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    STRING_LITERAL  reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    -               reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    !               reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    (               reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    COMMAND_PRINT   reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    ID              reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    TYPE            reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    ALIAS_TYPE      reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    META_TYPE       reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    {               reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    $end            reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    }               reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)
    COMMAND_ELSE    reduce using rule 20 (statement -> COMMAND_WHILE ( expression ) statement .)


state 100

    (13) non_empty_comma_sep_expr -> expression , non_empty_comma_sep_expr .

    )               reduce using rule 13 (non_empty_comma_sep_expr -> expression , non_empty_comma_sep_expr .)


state 101

    (18) statement -> COMMAND_IF ( expression ) statement .
    (19) statement -> COMMAND_IF ( expression ) statement . COMMAND_ELSE statement

    COMMAND_BREAK   reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    ;               reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    COMMAND_IF      reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    COMMAND_WHILE   reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    COMMAND_RANDOM  reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    VAL_LITERAL     reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    CHAR_LITERAL    reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    STRING_LITERAL  reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    -               reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    !               reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    (               reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    COMMAND_PRINT   reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    ID              reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    TYPE            reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    ALIAS_TYPE      reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    META_TYPE       reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    {               reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    $end            reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    }               reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .)
    COMMAND_ELSE    shift and go to state 104

  ! COMMAND_ELSE    [ reduce using rule 18 (statement -> COMMAND_IF ( expression ) statement .) ]


state 102

    (25) expression -> expression . ID ( expression . )
    (24) expression -> expression . . ID ( )
    (25) expression -> expression . . ID ( expression )
    (35) expression -> expression . BOOL_AND expression
    (36) expression -> expression . BOOL_OR expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . + expression
    (44) expression -> expression . COMP_EQU expression
    (45) expression -> expression . COMP_NEQU expression
    (48) expression -> expression . COMP_LESS expression
    (49) expression -> expression . COMP_GTR expression
    (50) expression -> expression . COMP_LTE expression
    (51) expression -> expression . COMP_GTE expression

    )               shift and go to state 105
    .               shift and go to state 45
    BOOL_AND        shift and go to state 39
    BOOL_OR         shift and go to state 46
    -               shift and go to state 51
    *               shift and go to state 47
    /               shift and go to state 41
    +               shift and go to state 50
    COMP_EQU        shift and go to state 49
    COMP_NEQU       shift and go to state 43
    COMP_LESS       shift and go to state 48
    COMP_GTR        shift and go to state 38
    COMP_LTE        shift and go to state 42
    COMP_GTE        shift and go to state 40


state 103

    (24) expression -> expression . ID ( ) .

    )               reduce using rule 24 (expression -> expression . ID ( ) .)
    .               reduce using rule 24 (expression -> expression . ID ( ) .)
    BOOL_AND        reduce using rule 24 (expression -> expression . ID ( ) .)
    BOOL_OR         reduce using rule 24 (expression -> expression . ID ( ) .)
    -               reduce using rule 24 (expression -> expression . ID ( ) .)
    *               reduce using rule 24 (expression -> expression . ID ( ) .)
    /               reduce using rule 24 (expression -> expression . ID ( ) .)
    +               reduce using rule 24 (expression -> expression . ID ( ) .)
    COMP_EQU        reduce using rule 24 (expression -> expression . ID ( ) .)
    COMP_NEQU       reduce using rule 24 (expression -> expression . ID ( ) .)
    COMP_LESS       reduce using rule 24 (expression -> expression . ID ( ) .)
    COMP_GTR        reduce using rule 24 (expression -> expression . ID ( ) .)
    COMP_LTE        reduce using rule 24 (expression -> expression . ID ( ) .)
    COMP_GTE        reduce using rule 24 (expression -> expression . ID ( ) .)
    ;               reduce using rule 24 (expression -> expression . ID ( ) .)
    ,               reduce using rule 24 (expression -> expression . ID ( ) .)
    ]               reduce using rule 24 (expression -> expression . ID ( ) .)


state 104

    (19) statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE . statement
    (4) statement -> . scopeupbro { statements }
    (5) statement -> . COMMAND_BREAK ;
    (7) statement -> . ;
    (8) statement -> . expression ;
    (9) statement -> . declaration ;
    (10) statement -> . print_statement ;
    (18) statement -> . COMMAND_IF ( expression ) statement
    (19) statement -> . COMMAND_IF ( expression ) statement COMMAND_ELSE statement
    (20) statement -> . COMMAND_WHILE ( expression ) statement
    (6) scopeupbro -> .
    (23) expression -> . var_usage = expression
    (24) expression -> . expression . ID ( )
    (25) expression -> . expression . ID ( expression )
    (26) expression -> . var_usage ASSIGN_ADD expression
    (27) expression -> . var_usage ASSIGN_SUB expression
    (28) expression -> . var_usage ASSIGN_MULT expression
    (29) expression -> . var_usage ASSIGN_DIV expression
    (30) expression -> . var_usage
    (31) expression -> . COMMAND_RANDOM ( expression )
    (35) expression -> . expression BOOL_AND expression
    (36) expression -> . expression BOOL_OR expression
    (37) expression -> . VAL_LITERAL
    (38) expression -> . CHAR_LITERAL
    (39) expression -> . STRING_LITERAL
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression + expression
    (44) expression -> . expression COMP_EQU expression
    (45) expression -> . expression COMP_NEQU expression
    (46) expression -> . - expression
    (47) expression -> . ! expression
    (48) expression -> . expression COMP_LESS expression
    (49) expression -> . expression COMP_GTR expression
    (50) expression -> . expression COMP_LTE expression
    (51) expression -> . expression COMP_GTE expression
    (52) expression -> . ( expression )
    (14) declaration -> . simple_declaration
    (15) declaration -> . assign_declaration
    (11) print_statement -> . COMMAND_PRINT ( non_empty_comma_sep_expr )
    (21) var_usage -> . ID
    (22) var_usage -> . ID [ expression ]
    (16) simple_declaration -> . type ID
    (17) assign_declaration -> . simple_declaration = expression
    (32) type -> . TYPE
    (33) type -> . ALIAS_TYPE
    (34) type -> . META_TYPE ( TYPE )

    COMMAND_BREAK   shift and go to state 6
    ;               shift and go to state 10
    COMMAND_IF      shift and go to state 15
    COMMAND_WHILE   shift and go to state 4
    {               reduce using rule 6 (scopeupbro -> .)
    COMMAND_RANDOM  shift and go to state 14
    VAL_LITERAL     shift and go to state 12
    CHAR_LITERAL    shift and go to state 16
    STRING_LITERAL  shift and go to state 9
    -               shift and go to state 27
    !               shift and go to state 3
    (               shift and go to state 25
    COMMAND_PRINT   shift and go to state 5
    ID              shift and go to state 7
    TYPE            shift and go to state 24
    ALIAS_TYPE      shift and go to state 18
    META_TYPE       shift and go to state 13

    scopeupbro                     shift and go to state 11
    statement                      shift and go to state 106
    simple_declaration             shift and go to state 26
    expression                     shift and go to state 17
    print_statement                shift and go to state 23
    var_usage                      shift and go to state 22
    declaration                    shift and go to state 19
    assign_declaration             shift and go to state 21
    type                           shift and go to state 8

state 105

    (25) expression -> expression . ID ( expression ) .

    )               reduce using rule 25 (expression -> expression . ID ( expression ) .)
    .               reduce using rule 25 (expression -> expression . ID ( expression ) .)
    BOOL_AND        reduce using rule 25 (expression -> expression . ID ( expression ) .)
    BOOL_OR         reduce using rule 25 (expression -> expression . ID ( expression ) .)
    -               reduce using rule 25 (expression -> expression . ID ( expression ) .)
    *               reduce using rule 25 (expression -> expression . ID ( expression ) .)
    /               reduce using rule 25 (expression -> expression . ID ( expression ) .)
    +               reduce using rule 25 (expression -> expression . ID ( expression ) .)
    COMP_EQU        reduce using rule 25 (expression -> expression . ID ( expression ) .)
    COMP_NEQU       reduce using rule 25 (expression -> expression . ID ( expression ) .)
    COMP_LESS       reduce using rule 25 (expression -> expression . ID ( expression ) .)
    COMP_GTR        reduce using rule 25 (expression -> expression . ID ( expression ) .)
    COMP_LTE        reduce using rule 25 (expression -> expression . ID ( expression ) .)
    COMP_GTE        reduce using rule 25 (expression -> expression . ID ( expression ) .)
    ;               reduce using rule 25 (expression -> expression . ID ( expression ) .)
    ,               reduce using rule 25 (expression -> expression . ID ( expression ) .)
    ]               reduce using rule 25 (expression -> expression . ID ( expression ) .)


state 106

    (19) statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .

    COMMAND_BREAK   reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    ;               reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    COMMAND_IF      reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    COMMAND_WHILE   reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    COMMAND_RANDOM  reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    VAL_LITERAL     reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    CHAR_LITERAL    reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    STRING_LITERAL  reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    -               reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    !               reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    (               reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    COMMAND_PRINT   reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    ID              reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    TYPE            reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    ALIAS_TYPE      reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    META_TYPE       reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    {               reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    $end            reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    }               reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)
    COMMAND_ELSE    reduce using rule 19 (statement -> COMMAND_IF ( expression ) statement COMMAND_ELSE statement .)

