Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> <empty>
Rule 3     statements -> statements statement
Rule 4     statement -> VAL_COPY value SCALAR_VAR
Rule 5     statement -> ADD value value SCALAR_VAR
Rule 6     statement -> SUB value value SCALAR_VAR
Rule 7     statement -> MULT value value SCALAR_VAR
Rule 8     statement -> DIV value value SCALAR_VAR
Rule 9     statement -> TEST_LESS value value SCALAR_VAR
Rule 10    statement -> TEST_GTR value value SCALAR_VAR
Rule 11    statement -> TEST_EQU value value SCALAR_VAR
Rule 12    statement -> TEST_NEQU value value SCALAR_VAR
Rule 13    statement -> TEST_GTE value value SCALAR_VAR
Rule 14    statement -> TEST_LTE value value SCALAR_VAR
Rule 15    statement -> ID :
Rule 16    value -> ID
Rule 17    statement -> JUMP value
Rule 18    statement -> JUMP_IF_0 value
Rule 19    statement -> JUMP_IF_N0 value
Rule 20    statement -> RANDOM value SCALAR_VAR
Rule 21    statement -> OUT_VAL value
Rule 22    statement -> OUT_CHAR value
Rule 23    statement -> NOP
Rule 24    statement -> PUSH value
Rule 25    statement -> POP SCALAR_VAR
Rule 26    statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR
Rule 27    statement -> AR_SET_IDX ARRAY_VAR value value
Rule 28    statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR
Rule 29    statement -> AR_SET_SIZE ARRAY_VAR value
Rule 30    statement -> AR_COPY ARRAY_VAR ARRAY_VAR
Rule 31    statement -> AR_PUSH ARRAY_VAR ARRAY_VAR
Rule 32    statement -> AR_POP ARRAY_VAR ARRAY_VAR
Rule 33    value -> CHAR_LITERAL
Rule 34    value -> VAL_LITERAL
Rule 35    value -> SCALAR_VAR

Terminals, with rules where they appear

:                    : 15
ADD                  : 5
ARRAY_VAR            : 26 27 28 29 30 30 31 31 32 32
AR_COPY              : 30
AR_GET_IDX           : 26
AR_GET_SIZE          : 28
AR_POP               : 32
AR_PUSH              : 31
AR_SET_IDX           : 27
AR_SET_SIZE          : 29
CHAR_LITERAL         : 33
DIV                  : 8
ID                   : 15 16
JUMP                 : 17
JUMP_IF_0            : 18
JUMP_IF_N0           : 19
MULT                 : 7
NOP                  : 23
OUT_CHAR             : 22
OUT_VAL              : 21
POP                  : 25
PUSH                 : 24
RANDOM               : 20
SCALAR_VAR           : 4 5 6 7 8 9 10 11 12 13 14 20 25 26 28 35
SUB                  : 6
TEST_EQU             : 11
TEST_GTE             : 13
TEST_GTR             : 10
TEST_LESS            : 9
TEST_LTE             : 14
TEST_NEQU            : 12
VAL_COPY             : 4
VAL_LITERAL          : 34
error                : 

Nonterminals, with rules where they appear

program              : 0
statement            : 3
statements           : 1 3
value                : 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 17 18 19 20 21 22 24 26 27 27 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> .
    (3) statements -> . statements statement

    VAL_COPY        reduce using rule 2 (statements -> .)
    ADD             reduce using rule 2 (statements -> .)
    SUB             reduce using rule 2 (statements -> .)
    MULT            reduce using rule 2 (statements -> .)
    DIV             reduce using rule 2 (statements -> .)
    TEST_LESS       reduce using rule 2 (statements -> .)
    TEST_GTR        reduce using rule 2 (statements -> .)
    TEST_EQU        reduce using rule 2 (statements -> .)
    TEST_NEQU       reduce using rule 2 (statements -> .)
    TEST_GTE        reduce using rule 2 (statements -> .)
    TEST_LTE        reduce using rule 2 (statements -> .)
    ID              reduce using rule 2 (statements -> .)
    JUMP            reduce using rule 2 (statements -> .)
    JUMP_IF_0       reduce using rule 2 (statements -> .)
    JUMP_IF_N0      reduce using rule 2 (statements -> .)
    RANDOM          reduce using rule 2 (statements -> .)
    OUT_VAL         reduce using rule 2 (statements -> .)
    OUT_CHAR        reduce using rule 2 (statements -> .)
    NOP             reduce using rule 2 (statements -> .)
    PUSH            reduce using rule 2 (statements -> .)
    POP             reduce using rule 2 (statements -> .)
    AR_GET_IDX      reduce using rule 2 (statements -> .)
    AR_SET_IDX      reduce using rule 2 (statements -> .)
    AR_GET_SIZE     reduce using rule 2 (statements -> .)
    AR_SET_SIZE     reduce using rule 2 (statements -> .)
    AR_COPY         reduce using rule 2 (statements -> .)
    AR_PUSH         reduce using rule 2 (statements -> .)
    AR_POP          reduce using rule 2 (statements -> .)
    $end            reduce using rule 2 (statements -> .)

    program                        shift and go to state 1
    statements                     shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (3) statements -> statements . statement
    (4) statement -> . VAL_COPY value SCALAR_VAR
    (5) statement -> . ADD value value SCALAR_VAR
    (6) statement -> . SUB value value SCALAR_VAR
    (7) statement -> . MULT value value SCALAR_VAR
    (8) statement -> . DIV value value SCALAR_VAR
    (9) statement -> . TEST_LESS value value SCALAR_VAR
    (10) statement -> . TEST_GTR value value SCALAR_VAR
    (11) statement -> . TEST_EQU value value SCALAR_VAR
    (12) statement -> . TEST_NEQU value value SCALAR_VAR
    (13) statement -> . TEST_GTE value value SCALAR_VAR
    (14) statement -> . TEST_LTE value value SCALAR_VAR
    (15) statement -> . ID :
    (17) statement -> . JUMP value
    (18) statement -> . JUMP_IF_0 value
    (19) statement -> . JUMP_IF_N0 value
    (20) statement -> . RANDOM value SCALAR_VAR
    (21) statement -> . OUT_VAL value
    (22) statement -> . OUT_CHAR value
    (23) statement -> . NOP
    (24) statement -> . PUSH value
    (25) statement -> . POP SCALAR_VAR
    (26) statement -> . AR_GET_IDX ARRAY_VAR value SCALAR_VAR
    (27) statement -> . AR_SET_IDX ARRAY_VAR value value
    (28) statement -> . AR_GET_SIZE ARRAY_VAR SCALAR_VAR
    (29) statement -> . AR_SET_SIZE ARRAY_VAR value
    (30) statement -> . AR_COPY ARRAY_VAR ARRAY_VAR
    (31) statement -> . AR_PUSH ARRAY_VAR ARRAY_VAR
    (32) statement -> . AR_POP ARRAY_VAR ARRAY_VAR

    $end            reduce using rule 1 (program -> statements .)
    VAL_COPY        shift and go to state 19
    ADD             shift and go to state 31
    SUB             shift and go to state 26
    MULT            shift and go to state 23
    DIV             shift and go to state 5
    TEST_LESS       shift and go to state 27
    TEST_GTR        shift and go to state 21
    TEST_EQU        shift and go to state 8
    TEST_NEQU       shift and go to state 15
    TEST_GTE        shift and go to state 28
    TEST_LTE        shift and go to state 11
    ID              shift and go to state 13
    JUMP            shift and go to state 16
    JUMP_IF_0       shift and go to state 3
    JUMP_IF_N0      shift and go to state 30
    RANDOM          shift and go to state 10
    OUT_VAL         shift and go to state 18
    OUT_CHAR        shift and go to state 4
    NOP             shift and go to state 7
    PUSH            shift and go to state 12
    POP             shift and go to state 6
    AR_GET_IDX      shift and go to state 9
    AR_SET_IDX      shift and go to state 25
    AR_GET_SIZE     shift and go to state 22
    AR_SET_SIZE     shift and go to state 29
    AR_COPY         shift and go to state 17
    AR_PUSH         shift and go to state 24
    AR_POP          shift and go to state 20

    statement                      shift and go to state 14

state 3

    (18) statement -> JUMP_IF_0 . value
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 34

state 4

    (22) statement -> OUT_CHAR . value
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 37

state 5

    (8) statement -> DIV . value value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 38

state 6

    (25) statement -> POP . SCALAR_VAR

    SCALAR_VAR      shift and go to state 39


state 7

    (23) statement -> NOP .

    VAL_COPY        reduce using rule 23 (statement -> NOP .)
    ADD             reduce using rule 23 (statement -> NOP .)
    SUB             reduce using rule 23 (statement -> NOP .)
    MULT            reduce using rule 23 (statement -> NOP .)
    DIV             reduce using rule 23 (statement -> NOP .)
    TEST_LESS       reduce using rule 23 (statement -> NOP .)
    TEST_GTR        reduce using rule 23 (statement -> NOP .)
    TEST_EQU        reduce using rule 23 (statement -> NOP .)
    TEST_NEQU       reduce using rule 23 (statement -> NOP .)
    TEST_GTE        reduce using rule 23 (statement -> NOP .)
    TEST_LTE        reduce using rule 23 (statement -> NOP .)
    ID              reduce using rule 23 (statement -> NOP .)
    JUMP            reduce using rule 23 (statement -> NOP .)
    JUMP_IF_0       reduce using rule 23 (statement -> NOP .)
    JUMP_IF_N0      reduce using rule 23 (statement -> NOP .)
    RANDOM          reduce using rule 23 (statement -> NOP .)
    OUT_VAL         reduce using rule 23 (statement -> NOP .)
    OUT_CHAR        reduce using rule 23 (statement -> NOP .)
    NOP             reduce using rule 23 (statement -> NOP .)
    PUSH            reduce using rule 23 (statement -> NOP .)
    POP             reduce using rule 23 (statement -> NOP .)
    AR_GET_IDX      reduce using rule 23 (statement -> NOP .)
    AR_SET_IDX      reduce using rule 23 (statement -> NOP .)
    AR_GET_SIZE     reduce using rule 23 (statement -> NOP .)
    AR_SET_SIZE     reduce using rule 23 (statement -> NOP .)
    AR_COPY         reduce using rule 23 (statement -> NOP .)
    AR_PUSH         reduce using rule 23 (statement -> NOP .)
    AR_POP          reduce using rule 23 (statement -> NOP .)
    $end            reduce using rule 23 (statement -> NOP .)


state 8

    (11) statement -> TEST_EQU . value value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 40

state 9

    (26) statement -> AR_GET_IDX . ARRAY_VAR value SCALAR_VAR

    ARRAY_VAR       shift and go to state 41


state 10

    (20) statement -> RANDOM . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 42

state 11

    (14) statement -> TEST_LTE . value value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 43

state 12

    (24) statement -> PUSH . value
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 44

state 13

    (15) statement -> ID . :

    :               shift and go to state 45


state 14

    (3) statements -> statements statement .

    VAL_COPY        reduce using rule 3 (statements -> statements statement .)
    ADD             reduce using rule 3 (statements -> statements statement .)
    SUB             reduce using rule 3 (statements -> statements statement .)
    MULT            reduce using rule 3 (statements -> statements statement .)
    DIV             reduce using rule 3 (statements -> statements statement .)
    TEST_LESS       reduce using rule 3 (statements -> statements statement .)
    TEST_GTR        reduce using rule 3 (statements -> statements statement .)
    TEST_EQU        reduce using rule 3 (statements -> statements statement .)
    TEST_NEQU       reduce using rule 3 (statements -> statements statement .)
    TEST_GTE        reduce using rule 3 (statements -> statements statement .)
    TEST_LTE        reduce using rule 3 (statements -> statements statement .)
    ID              reduce using rule 3 (statements -> statements statement .)
    JUMP            reduce using rule 3 (statements -> statements statement .)
    JUMP_IF_0       reduce using rule 3 (statements -> statements statement .)
    JUMP_IF_N0      reduce using rule 3 (statements -> statements statement .)
    RANDOM          reduce using rule 3 (statements -> statements statement .)
    OUT_VAL         reduce using rule 3 (statements -> statements statement .)
    OUT_CHAR        reduce using rule 3 (statements -> statements statement .)
    NOP             reduce using rule 3 (statements -> statements statement .)
    PUSH            reduce using rule 3 (statements -> statements statement .)
    POP             reduce using rule 3 (statements -> statements statement .)
    AR_GET_IDX      reduce using rule 3 (statements -> statements statement .)
    AR_SET_IDX      reduce using rule 3 (statements -> statements statement .)
    AR_GET_SIZE     reduce using rule 3 (statements -> statements statement .)
    AR_SET_SIZE     reduce using rule 3 (statements -> statements statement .)
    AR_COPY         reduce using rule 3 (statements -> statements statement .)
    AR_PUSH         reduce using rule 3 (statements -> statements statement .)
    AR_POP          reduce using rule 3 (statements -> statements statement .)
    $end            reduce using rule 3 (statements -> statements statement .)


state 15

    (12) statement -> TEST_NEQU . value value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 46

state 16

    (17) statement -> JUMP . value
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 47

state 17

    (30) statement -> AR_COPY . ARRAY_VAR ARRAY_VAR

    ARRAY_VAR       shift and go to state 48


state 18

    (21) statement -> OUT_VAL . value
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 49

state 19

    (4) statement -> VAL_COPY . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 50

state 20

    (32) statement -> AR_POP . ARRAY_VAR ARRAY_VAR

    ARRAY_VAR       shift and go to state 51


state 21

    (10) statement -> TEST_GTR . value value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 52

state 22

    (28) statement -> AR_GET_SIZE . ARRAY_VAR SCALAR_VAR

    ARRAY_VAR       shift and go to state 53


state 23

    (7) statement -> MULT . value value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 54

state 24

    (31) statement -> AR_PUSH . ARRAY_VAR ARRAY_VAR

    ARRAY_VAR       shift and go to state 55


state 25

    (27) statement -> AR_SET_IDX . ARRAY_VAR value value

    ARRAY_VAR       shift and go to state 56


state 26

    (6) statement -> SUB . value value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 57

state 27

    (9) statement -> TEST_LESS . value value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 58

state 28

    (13) statement -> TEST_GTE . value value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 59

state 29

    (29) statement -> AR_SET_SIZE . ARRAY_VAR value

    ARRAY_VAR       shift and go to state 60


state 30

    (19) statement -> JUMP_IF_N0 . value
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 61

state 31

    (5) statement -> ADD . value value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 62

state 32

    (33) value -> CHAR_LITERAL .

    ID              reduce using rule 33 (value -> CHAR_LITERAL .)
    CHAR_LITERAL    reduce using rule 33 (value -> CHAR_LITERAL .)
    VAL_LITERAL     reduce using rule 33 (value -> CHAR_LITERAL .)
    SCALAR_VAR      reduce using rule 33 (value -> CHAR_LITERAL .)
    VAL_COPY        reduce using rule 33 (value -> CHAR_LITERAL .)
    ADD             reduce using rule 33 (value -> CHAR_LITERAL .)
    SUB             reduce using rule 33 (value -> CHAR_LITERAL .)
    MULT            reduce using rule 33 (value -> CHAR_LITERAL .)
    DIV             reduce using rule 33 (value -> CHAR_LITERAL .)
    TEST_LESS       reduce using rule 33 (value -> CHAR_LITERAL .)
    TEST_GTR        reduce using rule 33 (value -> CHAR_LITERAL .)
    TEST_EQU        reduce using rule 33 (value -> CHAR_LITERAL .)
    TEST_NEQU       reduce using rule 33 (value -> CHAR_LITERAL .)
    TEST_GTE        reduce using rule 33 (value -> CHAR_LITERAL .)
    TEST_LTE        reduce using rule 33 (value -> CHAR_LITERAL .)
    JUMP            reduce using rule 33 (value -> CHAR_LITERAL .)
    JUMP_IF_0       reduce using rule 33 (value -> CHAR_LITERAL .)
    JUMP_IF_N0      reduce using rule 33 (value -> CHAR_LITERAL .)
    RANDOM          reduce using rule 33 (value -> CHAR_LITERAL .)
    OUT_VAL         reduce using rule 33 (value -> CHAR_LITERAL .)
    OUT_CHAR        reduce using rule 33 (value -> CHAR_LITERAL .)
    NOP             reduce using rule 33 (value -> CHAR_LITERAL .)
    PUSH            reduce using rule 33 (value -> CHAR_LITERAL .)
    POP             reduce using rule 33 (value -> CHAR_LITERAL .)
    AR_GET_IDX      reduce using rule 33 (value -> CHAR_LITERAL .)
    AR_SET_IDX      reduce using rule 33 (value -> CHAR_LITERAL .)
    AR_GET_SIZE     reduce using rule 33 (value -> CHAR_LITERAL .)
    AR_SET_SIZE     reduce using rule 33 (value -> CHAR_LITERAL .)
    AR_COPY         reduce using rule 33 (value -> CHAR_LITERAL .)
    AR_PUSH         reduce using rule 33 (value -> CHAR_LITERAL .)
    AR_POP          reduce using rule 33 (value -> CHAR_LITERAL .)
    $end            reduce using rule 33 (value -> CHAR_LITERAL .)


state 33

    (16) value -> ID .

    ID              reduce using rule 16 (value -> ID .)
    CHAR_LITERAL    reduce using rule 16 (value -> ID .)
    VAL_LITERAL     reduce using rule 16 (value -> ID .)
    SCALAR_VAR      reduce using rule 16 (value -> ID .)
    VAL_COPY        reduce using rule 16 (value -> ID .)
    ADD             reduce using rule 16 (value -> ID .)
    SUB             reduce using rule 16 (value -> ID .)
    MULT            reduce using rule 16 (value -> ID .)
    DIV             reduce using rule 16 (value -> ID .)
    TEST_LESS       reduce using rule 16 (value -> ID .)
    TEST_GTR        reduce using rule 16 (value -> ID .)
    TEST_EQU        reduce using rule 16 (value -> ID .)
    TEST_NEQU       reduce using rule 16 (value -> ID .)
    TEST_GTE        reduce using rule 16 (value -> ID .)
    TEST_LTE        reduce using rule 16 (value -> ID .)
    JUMP            reduce using rule 16 (value -> ID .)
    JUMP_IF_0       reduce using rule 16 (value -> ID .)
    JUMP_IF_N0      reduce using rule 16 (value -> ID .)
    RANDOM          reduce using rule 16 (value -> ID .)
    OUT_VAL         reduce using rule 16 (value -> ID .)
    OUT_CHAR        reduce using rule 16 (value -> ID .)
    NOP             reduce using rule 16 (value -> ID .)
    PUSH            reduce using rule 16 (value -> ID .)
    POP             reduce using rule 16 (value -> ID .)
    AR_GET_IDX      reduce using rule 16 (value -> ID .)
    AR_SET_IDX      reduce using rule 16 (value -> ID .)
    AR_GET_SIZE     reduce using rule 16 (value -> ID .)
    AR_SET_SIZE     reduce using rule 16 (value -> ID .)
    AR_COPY         reduce using rule 16 (value -> ID .)
    AR_PUSH         reduce using rule 16 (value -> ID .)
    AR_POP          reduce using rule 16 (value -> ID .)
    $end            reduce using rule 16 (value -> ID .)


state 34

    (18) statement -> JUMP_IF_0 value .

    VAL_COPY        reduce using rule 18 (statement -> JUMP_IF_0 value .)
    ADD             reduce using rule 18 (statement -> JUMP_IF_0 value .)
    SUB             reduce using rule 18 (statement -> JUMP_IF_0 value .)
    MULT            reduce using rule 18 (statement -> JUMP_IF_0 value .)
    DIV             reduce using rule 18 (statement -> JUMP_IF_0 value .)
    TEST_LESS       reduce using rule 18 (statement -> JUMP_IF_0 value .)
    TEST_GTR        reduce using rule 18 (statement -> JUMP_IF_0 value .)
    TEST_EQU        reduce using rule 18 (statement -> JUMP_IF_0 value .)
    TEST_NEQU       reduce using rule 18 (statement -> JUMP_IF_0 value .)
    TEST_GTE        reduce using rule 18 (statement -> JUMP_IF_0 value .)
    TEST_LTE        reduce using rule 18 (statement -> JUMP_IF_0 value .)
    ID              reduce using rule 18 (statement -> JUMP_IF_0 value .)
    JUMP            reduce using rule 18 (statement -> JUMP_IF_0 value .)
    JUMP_IF_0       reduce using rule 18 (statement -> JUMP_IF_0 value .)
    JUMP_IF_N0      reduce using rule 18 (statement -> JUMP_IF_0 value .)
    RANDOM          reduce using rule 18 (statement -> JUMP_IF_0 value .)
    OUT_VAL         reduce using rule 18 (statement -> JUMP_IF_0 value .)
    OUT_CHAR        reduce using rule 18 (statement -> JUMP_IF_0 value .)
    NOP             reduce using rule 18 (statement -> JUMP_IF_0 value .)
    PUSH            reduce using rule 18 (statement -> JUMP_IF_0 value .)
    POP             reduce using rule 18 (statement -> JUMP_IF_0 value .)
    AR_GET_IDX      reduce using rule 18 (statement -> JUMP_IF_0 value .)
    AR_SET_IDX      reduce using rule 18 (statement -> JUMP_IF_0 value .)
    AR_GET_SIZE     reduce using rule 18 (statement -> JUMP_IF_0 value .)
    AR_SET_SIZE     reduce using rule 18 (statement -> JUMP_IF_0 value .)
    AR_COPY         reduce using rule 18 (statement -> JUMP_IF_0 value .)
    AR_PUSH         reduce using rule 18 (statement -> JUMP_IF_0 value .)
    AR_POP          reduce using rule 18 (statement -> JUMP_IF_0 value .)
    $end            reduce using rule 18 (statement -> JUMP_IF_0 value .)


state 35

    (35) value -> SCALAR_VAR .

    ID              reduce using rule 35 (value -> SCALAR_VAR .)
    CHAR_LITERAL    reduce using rule 35 (value -> SCALAR_VAR .)
    VAL_LITERAL     reduce using rule 35 (value -> SCALAR_VAR .)
    SCALAR_VAR      reduce using rule 35 (value -> SCALAR_VAR .)
    VAL_COPY        reduce using rule 35 (value -> SCALAR_VAR .)
    ADD             reduce using rule 35 (value -> SCALAR_VAR .)
    SUB             reduce using rule 35 (value -> SCALAR_VAR .)
    MULT            reduce using rule 35 (value -> SCALAR_VAR .)
    DIV             reduce using rule 35 (value -> SCALAR_VAR .)
    TEST_LESS       reduce using rule 35 (value -> SCALAR_VAR .)
    TEST_GTR        reduce using rule 35 (value -> SCALAR_VAR .)
    TEST_EQU        reduce using rule 35 (value -> SCALAR_VAR .)
    TEST_NEQU       reduce using rule 35 (value -> SCALAR_VAR .)
    TEST_GTE        reduce using rule 35 (value -> SCALAR_VAR .)
    TEST_LTE        reduce using rule 35 (value -> SCALAR_VAR .)
    JUMP            reduce using rule 35 (value -> SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 35 (value -> SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 35 (value -> SCALAR_VAR .)
    RANDOM          reduce using rule 35 (value -> SCALAR_VAR .)
    OUT_VAL         reduce using rule 35 (value -> SCALAR_VAR .)
    OUT_CHAR        reduce using rule 35 (value -> SCALAR_VAR .)
    NOP             reduce using rule 35 (value -> SCALAR_VAR .)
    PUSH            reduce using rule 35 (value -> SCALAR_VAR .)
    POP             reduce using rule 35 (value -> SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 35 (value -> SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 35 (value -> SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 35 (value -> SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 35 (value -> SCALAR_VAR .)
    AR_COPY         reduce using rule 35 (value -> SCALAR_VAR .)
    AR_PUSH         reduce using rule 35 (value -> SCALAR_VAR .)
    AR_POP          reduce using rule 35 (value -> SCALAR_VAR .)
    $end            reduce using rule 35 (value -> SCALAR_VAR .)


state 36

    (34) value -> VAL_LITERAL .

    ID              reduce using rule 34 (value -> VAL_LITERAL .)
    CHAR_LITERAL    reduce using rule 34 (value -> VAL_LITERAL .)
    VAL_LITERAL     reduce using rule 34 (value -> VAL_LITERAL .)
    SCALAR_VAR      reduce using rule 34 (value -> VAL_LITERAL .)
    VAL_COPY        reduce using rule 34 (value -> VAL_LITERAL .)
    ADD             reduce using rule 34 (value -> VAL_LITERAL .)
    SUB             reduce using rule 34 (value -> VAL_LITERAL .)
    MULT            reduce using rule 34 (value -> VAL_LITERAL .)
    DIV             reduce using rule 34 (value -> VAL_LITERAL .)
    TEST_LESS       reduce using rule 34 (value -> VAL_LITERAL .)
    TEST_GTR        reduce using rule 34 (value -> VAL_LITERAL .)
    TEST_EQU        reduce using rule 34 (value -> VAL_LITERAL .)
    TEST_NEQU       reduce using rule 34 (value -> VAL_LITERAL .)
    TEST_GTE        reduce using rule 34 (value -> VAL_LITERAL .)
    TEST_LTE        reduce using rule 34 (value -> VAL_LITERAL .)
    JUMP            reduce using rule 34 (value -> VAL_LITERAL .)
    JUMP_IF_0       reduce using rule 34 (value -> VAL_LITERAL .)
    JUMP_IF_N0      reduce using rule 34 (value -> VAL_LITERAL .)
    RANDOM          reduce using rule 34 (value -> VAL_LITERAL .)
    OUT_VAL         reduce using rule 34 (value -> VAL_LITERAL .)
    OUT_CHAR        reduce using rule 34 (value -> VAL_LITERAL .)
    NOP             reduce using rule 34 (value -> VAL_LITERAL .)
    PUSH            reduce using rule 34 (value -> VAL_LITERAL .)
    POP             reduce using rule 34 (value -> VAL_LITERAL .)
    AR_GET_IDX      reduce using rule 34 (value -> VAL_LITERAL .)
    AR_SET_IDX      reduce using rule 34 (value -> VAL_LITERAL .)
    AR_GET_SIZE     reduce using rule 34 (value -> VAL_LITERAL .)
    AR_SET_SIZE     reduce using rule 34 (value -> VAL_LITERAL .)
    AR_COPY         reduce using rule 34 (value -> VAL_LITERAL .)
    AR_PUSH         reduce using rule 34 (value -> VAL_LITERAL .)
    AR_POP          reduce using rule 34 (value -> VAL_LITERAL .)
    $end            reduce using rule 34 (value -> VAL_LITERAL .)


state 37

    (22) statement -> OUT_CHAR value .

    VAL_COPY        reduce using rule 22 (statement -> OUT_CHAR value .)
    ADD             reduce using rule 22 (statement -> OUT_CHAR value .)
    SUB             reduce using rule 22 (statement -> OUT_CHAR value .)
    MULT            reduce using rule 22 (statement -> OUT_CHAR value .)
    DIV             reduce using rule 22 (statement -> OUT_CHAR value .)
    TEST_LESS       reduce using rule 22 (statement -> OUT_CHAR value .)
    TEST_GTR        reduce using rule 22 (statement -> OUT_CHAR value .)
    TEST_EQU        reduce using rule 22 (statement -> OUT_CHAR value .)
    TEST_NEQU       reduce using rule 22 (statement -> OUT_CHAR value .)
    TEST_GTE        reduce using rule 22 (statement -> OUT_CHAR value .)
    TEST_LTE        reduce using rule 22 (statement -> OUT_CHAR value .)
    ID              reduce using rule 22 (statement -> OUT_CHAR value .)
    JUMP            reduce using rule 22 (statement -> OUT_CHAR value .)
    JUMP_IF_0       reduce using rule 22 (statement -> OUT_CHAR value .)
    JUMP_IF_N0      reduce using rule 22 (statement -> OUT_CHAR value .)
    RANDOM          reduce using rule 22 (statement -> OUT_CHAR value .)
    OUT_VAL         reduce using rule 22 (statement -> OUT_CHAR value .)
    OUT_CHAR        reduce using rule 22 (statement -> OUT_CHAR value .)
    NOP             reduce using rule 22 (statement -> OUT_CHAR value .)
    PUSH            reduce using rule 22 (statement -> OUT_CHAR value .)
    POP             reduce using rule 22 (statement -> OUT_CHAR value .)
    AR_GET_IDX      reduce using rule 22 (statement -> OUT_CHAR value .)
    AR_SET_IDX      reduce using rule 22 (statement -> OUT_CHAR value .)
    AR_GET_SIZE     reduce using rule 22 (statement -> OUT_CHAR value .)
    AR_SET_SIZE     reduce using rule 22 (statement -> OUT_CHAR value .)
    AR_COPY         reduce using rule 22 (statement -> OUT_CHAR value .)
    AR_PUSH         reduce using rule 22 (statement -> OUT_CHAR value .)
    AR_POP          reduce using rule 22 (statement -> OUT_CHAR value .)
    $end            reduce using rule 22 (statement -> OUT_CHAR value .)


state 38

    (8) statement -> DIV value . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 63

state 39

    (25) statement -> POP SCALAR_VAR .

    VAL_COPY        reduce using rule 25 (statement -> POP SCALAR_VAR .)
    ADD             reduce using rule 25 (statement -> POP SCALAR_VAR .)
    SUB             reduce using rule 25 (statement -> POP SCALAR_VAR .)
    MULT            reduce using rule 25 (statement -> POP SCALAR_VAR .)
    DIV             reduce using rule 25 (statement -> POP SCALAR_VAR .)
    TEST_LESS       reduce using rule 25 (statement -> POP SCALAR_VAR .)
    TEST_GTR        reduce using rule 25 (statement -> POP SCALAR_VAR .)
    TEST_EQU        reduce using rule 25 (statement -> POP SCALAR_VAR .)
    TEST_NEQU       reduce using rule 25 (statement -> POP SCALAR_VAR .)
    TEST_GTE        reduce using rule 25 (statement -> POP SCALAR_VAR .)
    TEST_LTE        reduce using rule 25 (statement -> POP SCALAR_VAR .)
    ID              reduce using rule 25 (statement -> POP SCALAR_VAR .)
    JUMP            reduce using rule 25 (statement -> POP SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 25 (statement -> POP SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 25 (statement -> POP SCALAR_VAR .)
    RANDOM          reduce using rule 25 (statement -> POP SCALAR_VAR .)
    OUT_VAL         reduce using rule 25 (statement -> POP SCALAR_VAR .)
    OUT_CHAR        reduce using rule 25 (statement -> POP SCALAR_VAR .)
    NOP             reduce using rule 25 (statement -> POP SCALAR_VAR .)
    PUSH            reduce using rule 25 (statement -> POP SCALAR_VAR .)
    POP             reduce using rule 25 (statement -> POP SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 25 (statement -> POP SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 25 (statement -> POP SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 25 (statement -> POP SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 25 (statement -> POP SCALAR_VAR .)
    AR_COPY         reduce using rule 25 (statement -> POP SCALAR_VAR .)
    AR_PUSH         reduce using rule 25 (statement -> POP SCALAR_VAR .)
    AR_POP          reduce using rule 25 (statement -> POP SCALAR_VAR .)
    $end            reduce using rule 25 (statement -> POP SCALAR_VAR .)


state 40

    (11) statement -> TEST_EQU value . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 64

state 41

    (26) statement -> AR_GET_IDX ARRAY_VAR . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 65

state 42

    (20) statement -> RANDOM value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 66


state 43

    (14) statement -> TEST_LTE value . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 67

state 44

    (24) statement -> PUSH value .

    VAL_COPY        reduce using rule 24 (statement -> PUSH value .)
    ADD             reduce using rule 24 (statement -> PUSH value .)
    SUB             reduce using rule 24 (statement -> PUSH value .)
    MULT            reduce using rule 24 (statement -> PUSH value .)
    DIV             reduce using rule 24 (statement -> PUSH value .)
    TEST_LESS       reduce using rule 24 (statement -> PUSH value .)
    TEST_GTR        reduce using rule 24 (statement -> PUSH value .)
    TEST_EQU        reduce using rule 24 (statement -> PUSH value .)
    TEST_NEQU       reduce using rule 24 (statement -> PUSH value .)
    TEST_GTE        reduce using rule 24 (statement -> PUSH value .)
    TEST_LTE        reduce using rule 24 (statement -> PUSH value .)
    ID              reduce using rule 24 (statement -> PUSH value .)
    JUMP            reduce using rule 24 (statement -> PUSH value .)
    JUMP_IF_0       reduce using rule 24 (statement -> PUSH value .)
    JUMP_IF_N0      reduce using rule 24 (statement -> PUSH value .)
    RANDOM          reduce using rule 24 (statement -> PUSH value .)
    OUT_VAL         reduce using rule 24 (statement -> PUSH value .)
    OUT_CHAR        reduce using rule 24 (statement -> PUSH value .)
    NOP             reduce using rule 24 (statement -> PUSH value .)
    PUSH            reduce using rule 24 (statement -> PUSH value .)
    POP             reduce using rule 24 (statement -> PUSH value .)
    AR_GET_IDX      reduce using rule 24 (statement -> PUSH value .)
    AR_SET_IDX      reduce using rule 24 (statement -> PUSH value .)
    AR_GET_SIZE     reduce using rule 24 (statement -> PUSH value .)
    AR_SET_SIZE     reduce using rule 24 (statement -> PUSH value .)
    AR_COPY         reduce using rule 24 (statement -> PUSH value .)
    AR_PUSH         reduce using rule 24 (statement -> PUSH value .)
    AR_POP          reduce using rule 24 (statement -> PUSH value .)
    $end            reduce using rule 24 (statement -> PUSH value .)


state 45

    (15) statement -> ID : .

    VAL_COPY        reduce using rule 15 (statement -> ID : .)
    ADD             reduce using rule 15 (statement -> ID : .)
    SUB             reduce using rule 15 (statement -> ID : .)
    MULT            reduce using rule 15 (statement -> ID : .)
    DIV             reduce using rule 15 (statement -> ID : .)
    TEST_LESS       reduce using rule 15 (statement -> ID : .)
    TEST_GTR        reduce using rule 15 (statement -> ID : .)
    TEST_EQU        reduce using rule 15 (statement -> ID : .)
    TEST_NEQU       reduce using rule 15 (statement -> ID : .)
    TEST_GTE        reduce using rule 15 (statement -> ID : .)
    TEST_LTE        reduce using rule 15 (statement -> ID : .)
    ID              reduce using rule 15 (statement -> ID : .)
    JUMP            reduce using rule 15 (statement -> ID : .)
    JUMP_IF_0       reduce using rule 15 (statement -> ID : .)
    JUMP_IF_N0      reduce using rule 15 (statement -> ID : .)
    RANDOM          reduce using rule 15 (statement -> ID : .)
    OUT_VAL         reduce using rule 15 (statement -> ID : .)
    OUT_CHAR        reduce using rule 15 (statement -> ID : .)
    NOP             reduce using rule 15 (statement -> ID : .)
    PUSH            reduce using rule 15 (statement -> ID : .)
    POP             reduce using rule 15 (statement -> ID : .)
    AR_GET_IDX      reduce using rule 15 (statement -> ID : .)
    AR_SET_IDX      reduce using rule 15 (statement -> ID : .)
    AR_GET_SIZE     reduce using rule 15 (statement -> ID : .)
    AR_SET_SIZE     reduce using rule 15 (statement -> ID : .)
    AR_COPY         reduce using rule 15 (statement -> ID : .)
    AR_PUSH         reduce using rule 15 (statement -> ID : .)
    AR_POP          reduce using rule 15 (statement -> ID : .)
    $end            reduce using rule 15 (statement -> ID : .)


state 46

    (12) statement -> TEST_NEQU value . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 68

state 47

    (17) statement -> JUMP value .

    VAL_COPY        reduce using rule 17 (statement -> JUMP value .)
    ADD             reduce using rule 17 (statement -> JUMP value .)
    SUB             reduce using rule 17 (statement -> JUMP value .)
    MULT            reduce using rule 17 (statement -> JUMP value .)
    DIV             reduce using rule 17 (statement -> JUMP value .)
    TEST_LESS       reduce using rule 17 (statement -> JUMP value .)
    TEST_GTR        reduce using rule 17 (statement -> JUMP value .)
    TEST_EQU        reduce using rule 17 (statement -> JUMP value .)
    TEST_NEQU       reduce using rule 17 (statement -> JUMP value .)
    TEST_GTE        reduce using rule 17 (statement -> JUMP value .)
    TEST_LTE        reduce using rule 17 (statement -> JUMP value .)
    ID              reduce using rule 17 (statement -> JUMP value .)
    JUMP            reduce using rule 17 (statement -> JUMP value .)
    JUMP_IF_0       reduce using rule 17 (statement -> JUMP value .)
    JUMP_IF_N0      reduce using rule 17 (statement -> JUMP value .)
    RANDOM          reduce using rule 17 (statement -> JUMP value .)
    OUT_VAL         reduce using rule 17 (statement -> JUMP value .)
    OUT_CHAR        reduce using rule 17 (statement -> JUMP value .)
    NOP             reduce using rule 17 (statement -> JUMP value .)
    PUSH            reduce using rule 17 (statement -> JUMP value .)
    POP             reduce using rule 17 (statement -> JUMP value .)
    AR_GET_IDX      reduce using rule 17 (statement -> JUMP value .)
    AR_SET_IDX      reduce using rule 17 (statement -> JUMP value .)
    AR_GET_SIZE     reduce using rule 17 (statement -> JUMP value .)
    AR_SET_SIZE     reduce using rule 17 (statement -> JUMP value .)
    AR_COPY         reduce using rule 17 (statement -> JUMP value .)
    AR_PUSH         reduce using rule 17 (statement -> JUMP value .)
    AR_POP          reduce using rule 17 (statement -> JUMP value .)
    $end            reduce using rule 17 (statement -> JUMP value .)


state 48

    (30) statement -> AR_COPY ARRAY_VAR . ARRAY_VAR

    ARRAY_VAR       shift and go to state 69


state 49

    (21) statement -> OUT_VAL value .

    VAL_COPY        reduce using rule 21 (statement -> OUT_VAL value .)
    ADD             reduce using rule 21 (statement -> OUT_VAL value .)
    SUB             reduce using rule 21 (statement -> OUT_VAL value .)
    MULT            reduce using rule 21 (statement -> OUT_VAL value .)
    DIV             reduce using rule 21 (statement -> OUT_VAL value .)
    TEST_LESS       reduce using rule 21 (statement -> OUT_VAL value .)
    TEST_GTR        reduce using rule 21 (statement -> OUT_VAL value .)
    TEST_EQU        reduce using rule 21 (statement -> OUT_VAL value .)
    TEST_NEQU       reduce using rule 21 (statement -> OUT_VAL value .)
    TEST_GTE        reduce using rule 21 (statement -> OUT_VAL value .)
    TEST_LTE        reduce using rule 21 (statement -> OUT_VAL value .)
    ID              reduce using rule 21 (statement -> OUT_VAL value .)
    JUMP            reduce using rule 21 (statement -> OUT_VAL value .)
    JUMP_IF_0       reduce using rule 21 (statement -> OUT_VAL value .)
    JUMP_IF_N0      reduce using rule 21 (statement -> OUT_VAL value .)
    RANDOM          reduce using rule 21 (statement -> OUT_VAL value .)
    OUT_VAL         reduce using rule 21 (statement -> OUT_VAL value .)
    OUT_CHAR        reduce using rule 21 (statement -> OUT_VAL value .)
    NOP             reduce using rule 21 (statement -> OUT_VAL value .)
    PUSH            reduce using rule 21 (statement -> OUT_VAL value .)
    POP             reduce using rule 21 (statement -> OUT_VAL value .)
    AR_GET_IDX      reduce using rule 21 (statement -> OUT_VAL value .)
    AR_SET_IDX      reduce using rule 21 (statement -> OUT_VAL value .)
    AR_GET_SIZE     reduce using rule 21 (statement -> OUT_VAL value .)
    AR_SET_SIZE     reduce using rule 21 (statement -> OUT_VAL value .)
    AR_COPY         reduce using rule 21 (statement -> OUT_VAL value .)
    AR_PUSH         reduce using rule 21 (statement -> OUT_VAL value .)
    AR_POP          reduce using rule 21 (statement -> OUT_VAL value .)
    $end            reduce using rule 21 (statement -> OUT_VAL value .)


state 50

    (4) statement -> VAL_COPY value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 70


state 51

    (32) statement -> AR_POP ARRAY_VAR . ARRAY_VAR

    ARRAY_VAR       shift and go to state 71


state 52

    (10) statement -> TEST_GTR value . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 72

state 53

    (28) statement -> AR_GET_SIZE ARRAY_VAR . SCALAR_VAR

    SCALAR_VAR      shift and go to state 73


state 54

    (7) statement -> MULT value . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 74

state 55

    (31) statement -> AR_PUSH ARRAY_VAR . ARRAY_VAR

    ARRAY_VAR       shift and go to state 75


state 56

    (27) statement -> AR_SET_IDX ARRAY_VAR . value value
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 76

state 57

    (6) statement -> SUB value . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 77

state 58

    (9) statement -> TEST_LESS value . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 78

state 59

    (13) statement -> TEST_GTE value . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 79

state 60

    (29) statement -> AR_SET_SIZE ARRAY_VAR . value
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 80

state 61

    (19) statement -> JUMP_IF_N0 value .

    VAL_COPY        reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    ADD             reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    SUB             reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    MULT            reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    DIV             reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    TEST_LESS       reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    TEST_GTR        reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    TEST_EQU        reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    TEST_NEQU       reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    TEST_GTE        reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    TEST_LTE        reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    ID              reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    JUMP            reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    JUMP_IF_0       reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    JUMP_IF_N0      reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    RANDOM          reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    OUT_VAL         reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    OUT_CHAR        reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    NOP             reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    PUSH            reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    POP             reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    AR_GET_IDX      reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    AR_SET_IDX      reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    AR_GET_SIZE     reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    AR_SET_SIZE     reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    AR_COPY         reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    AR_PUSH         reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    AR_POP          reduce using rule 19 (statement -> JUMP_IF_N0 value .)
    $end            reduce using rule 19 (statement -> JUMP_IF_N0 value .)


state 62

    (5) statement -> ADD value . value SCALAR_VAR
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 81

state 63

    (8) statement -> DIV value value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 82


state 64

    (11) statement -> TEST_EQU value value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 83


state 65

    (26) statement -> AR_GET_IDX ARRAY_VAR value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 84


state 66

    (20) statement -> RANDOM value SCALAR_VAR .

    VAL_COPY        reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    ADD             reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    SUB             reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    MULT            reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    DIV             reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    TEST_LESS       reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    TEST_GTR        reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    TEST_EQU        reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    TEST_GTE        reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    TEST_LTE        reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    ID              reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    JUMP            reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    RANDOM          reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    OUT_VAL         reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    NOP             reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    PUSH            reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    POP             reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    AR_COPY         reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    AR_PUSH         reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    AR_POP          reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)
    $end            reduce using rule 20 (statement -> RANDOM value SCALAR_VAR .)


state 67

    (14) statement -> TEST_LTE value value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 85


state 68

    (12) statement -> TEST_NEQU value value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 86


state 69

    (30) statement -> AR_COPY ARRAY_VAR ARRAY_VAR .

    VAL_COPY        reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    ADD             reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    SUB             reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    MULT            reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    DIV             reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    TEST_LESS       reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    TEST_GTR        reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    TEST_EQU        reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    TEST_NEQU       reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    TEST_GTE        reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    TEST_LTE        reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    ID              reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    JUMP            reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    JUMP_IF_0       reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    JUMP_IF_N0      reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    RANDOM          reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    OUT_VAL         reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    OUT_CHAR        reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    NOP             reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    PUSH            reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    POP             reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    AR_GET_IDX      reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    AR_SET_IDX      reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    AR_GET_SIZE     reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    AR_SET_SIZE     reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    AR_COPY         reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    AR_PUSH         reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    AR_POP          reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)
    $end            reduce using rule 30 (statement -> AR_COPY ARRAY_VAR ARRAY_VAR .)


state 70

    (4) statement -> VAL_COPY value SCALAR_VAR .

    VAL_COPY        reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    ADD             reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    SUB             reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    MULT            reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    DIV             reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    TEST_LESS       reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    TEST_GTR        reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    TEST_EQU        reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    TEST_GTE        reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    TEST_LTE        reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    ID              reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    JUMP            reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    RANDOM          reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    OUT_VAL         reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    NOP             reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    PUSH            reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    POP             reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    AR_COPY         reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    AR_PUSH         reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    AR_POP          reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)
    $end            reduce using rule 4 (statement -> VAL_COPY value SCALAR_VAR .)


state 71

    (32) statement -> AR_POP ARRAY_VAR ARRAY_VAR .

    VAL_COPY        reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    ADD             reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    SUB             reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    MULT            reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    DIV             reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    TEST_LESS       reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    TEST_GTR        reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    TEST_EQU        reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    TEST_NEQU       reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    TEST_GTE        reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    TEST_LTE        reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    ID              reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    JUMP            reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    JUMP_IF_0       reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    JUMP_IF_N0      reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    RANDOM          reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    OUT_VAL         reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    OUT_CHAR        reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    NOP             reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    PUSH            reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    POP             reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    AR_GET_IDX      reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    AR_SET_IDX      reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    AR_GET_SIZE     reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    AR_SET_SIZE     reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    AR_COPY         reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    AR_PUSH         reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    AR_POP          reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)
    $end            reduce using rule 32 (statement -> AR_POP ARRAY_VAR ARRAY_VAR .)


state 72

    (10) statement -> TEST_GTR value value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 87


state 73

    (28) statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .

    VAL_COPY        reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    ADD             reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    SUB             reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    MULT            reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    DIV             reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    TEST_LESS       reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    TEST_GTR        reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    TEST_EQU        reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    TEST_NEQU       reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    TEST_GTE        reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    TEST_LTE        reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    ID              reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    JUMP            reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    RANDOM          reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    OUT_VAL         reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    OUT_CHAR        reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    NOP             reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    PUSH            reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    POP             reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    AR_COPY         reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    AR_PUSH         reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    AR_POP          reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)
    $end            reduce using rule 28 (statement -> AR_GET_SIZE ARRAY_VAR SCALAR_VAR .)


state 74

    (7) statement -> MULT value value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 88


state 75

    (31) statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .

    VAL_COPY        reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    ADD             reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    SUB             reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    MULT            reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    DIV             reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    TEST_LESS       reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    TEST_GTR        reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    TEST_EQU        reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    TEST_NEQU       reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    TEST_GTE        reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    TEST_LTE        reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    ID              reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    JUMP            reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    JUMP_IF_0       reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    JUMP_IF_N0      reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    RANDOM          reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    OUT_VAL         reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    OUT_CHAR        reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    NOP             reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    PUSH            reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    POP             reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    AR_GET_IDX      reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    AR_SET_IDX      reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    AR_GET_SIZE     reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    AR_SET_SIZE     reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    AR_COPY         reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    AR_PUSH         reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    AR_POP          reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)
    $end            reduce using rule 31 (statement -> AR_PUSH ARRAY_VAR ARRAY_VAR .)


state 76

    (27) statement -> AR_SET_IDX ARRAY_VAR value . value
    (16) value -> . ID
    (33) value -> . CHAR_LITERAL
    (34) value -> . VAL_LITERAL
    (35) value -> . SCALAR_VAR

    ID              shift and go to state 33
    CHAR_LITERAL    shift and go to state 32
    VAL_LITERAL     shift and go to state 36
    SCALAR_VAR      shift and go to state 35

    value                          shift and go to state 89

state 77

    (6) statement -> SUB value value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 90


state 78

    (9) statement -> TEST_LESS value value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 91


state 79

    (13) statement -> TEST_GTE value value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 92


state 80

    (29) statement -> AR_SET_SIZE ARRAY_VAR value .

    VAL_COPY        reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    ADD             reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    SUB             reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    MULT            reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    DIV             reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    TEST_LESS       reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    TEST_GTR        reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    TEST_EQU        reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    TEST_NEQU       reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    TEST_GTE        reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    TEST_LTE        reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    ID              reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    JUMP            reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    JUMP_IF_0       reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    JUMP_IF_N0      reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    RANDOM          reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    OUT_VAL         reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    OUT_CHAR        reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    NOP             reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    PUSH            reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    POP             reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    AR_GET_IDX      reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    AR_SET_IDX      reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    AR_GET_SIZE     reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    AR_SET_SIZE     reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    AR_COPY         reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    AR_PUSH         reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    AR_POP          reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)
    $end            reduce using rule 29 (statement -> AR_SET_SIZE ARRAY_VAR value .)


state 81

    (5) statement -> ADD value value . SCALAR_VAR

    SCALAR_VAR      shift and go to state 93


state 82

    (8) statement -> DIV value value SCALAR_VAR .

    VAL_COPY        reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    ADD             reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    SUB             reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    MULT            reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    DIV             reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    TEST_LESS       reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    TEST_GTR        reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    TEST_EQU        reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    TEST_GTE        reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    TEST_LTE        reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    ID              reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    JUMP            reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    RANDOM          reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    OUT_VAL         reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    NOP             reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    PUSH            reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    POP             reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    AR_COPY         reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    AR_PUSH         reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    AR_POP          reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)
    $end            reduce using rule 8 (statement -> DIV value value SCALAR_VAR .)


state 83

    (11) statement -> TEST_EQU value value SCALAR_VAR .

    VAL_COPY        reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    ADD             reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    SUB             reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    MULT            reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    DIV             reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    TEST_LESS       reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    TEST_GTR        reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    TEST_EQU        reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    TEST_GTE        reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    TEST_LTE        reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    ID              reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    JUMP            reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    RANDOM          reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    OUT_VAL         reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    NOP             reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    PUSH            reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    POP             reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    AR_COPY         reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    AR_PUSH         reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    AR_POP          reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)
    $end            reduce using rule 11 (statement -> TEST_EQU value value SCALAR_VAR .)


state 84

    (26) statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .

    VAL_COPY        reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    ADD             reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    SUB             reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    MULT            reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    DIV             reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    TEST_LESS       reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    TEST_GTR        reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    TEST_EQU        reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    TEST_GTE        reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    TEST_LTE        reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    ID              reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    JUMP            reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    RANDOM          reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    OUT_VAL         reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    NOP             reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    PUSH            reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    POP             reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    AR_COPY         reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    AR_PUSH         reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    AR_POP          reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)
    $end            reduce using rule 26 (statement -> AR_GET_IDX ARRAY_VAR value SCALAR_VAR .)


state 85

    (14) statement -> TEST_LTE value value SCALAR_VAR .

    VAL_COPY        reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    ADD             reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    SUB             reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    MULT            reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    DIV             reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    TEST_LESS       reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    TEST_GTR        reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    TEST_EQU        reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    TEST_GTE        reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    TEST_LTE        reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    ID              reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    JUMP            reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    RANDOM          reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    OUT_VAL         reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    NOP             reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    PUSH            reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    POP             reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    AR_COPY         reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    AR_PUSH         reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    AR_POP          reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)
    $end            reduce using rule 14 (statement -> TEST_LTE value value SCALAR_VAR .)


state 86

    (12) statement -> TEST_NEQU value value SCALAR_VAR .

    VAL_COPY        reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    ADD             reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    SUB             reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    MULT            reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    DIV             reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    TEST_LESS       reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    TEST_GTR        reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    TEST_EQU        reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    TEST_GTE        reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    TEST_LTE        reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    ID              reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    JUMP            reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    RANDOM          reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    OUT_VAL         reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    NOP             reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    PUSH            reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    POP             reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    AR_COPY         reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    AR_PUSH         reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    AR_POP          reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)
    $end            reduce using rule 12 (statement -> TEST_NEQU value value SCALAR_VAR .)


state 87

    (10) statement -> TEST_GTR value value SCALAR_VAR .

    VAL_COPY        reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    ADD             reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    SUB             reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    MULT            reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    DIV             reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    TEST_LESS       reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    TEST_GTR        reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    TEST_EQU        reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    TEST_GTE        reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    TEST_LTE        reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    ID              reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    JUMP            reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    RANDOM          reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    OUT_VAL         reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    NOP             reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    PUSH            reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    POP             reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    AR_COPY         reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    AR_PUSH         reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    AR_POP          reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)
    $end            reduce using rule 10 (statement -> TEST_GTR value value SCALAR_VAR .)


state 88

    (7) statement -> MULT value value SCALAR_VAR .

    VAL_COPY        reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    ADD             reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    SUB             reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    MULT            reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    DIV             reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    TEST_LESS       reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    TEST_GTR        reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    TEST_EQU        reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    TEST_GTE        reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    TEST_LTE        reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    ID              reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    JUMP            reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    RANDOM          reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    OUT_VAL         reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    NOP             reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    PUSH            reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    POP             reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    AR_COPY         reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    AR_PUSH         reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    AR_POP          reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)
    $end            reduce using rule 7 (statement -> MULT value value SCALAR_VAR .)


state 89

    (27) statement -> AR_SET_IDX ARRAY_VAR value value .

    VAL_COPY        reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    ADD             reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    SUB             reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    MULT            reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    DIV             reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    TEST_LESS       reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    TEST_GTR        reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    TEST_EQU        reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    TEST_NEQU       reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    TEST_GTE        reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    TEST_LTE        reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    ID              reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    JUMP            reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    JUMP_IF_0       reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    JUMP_IF_N0      reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    RANDOM          reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    OUT_VAL         reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    OUT_CHAR        reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    NOP             reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    PUSH            reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    POP             reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    AR_GET_IDX      reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    AR_SET_IDX      reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    AR_GET_SIZE     reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    AR_SET_SIZE     reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    AR_COPY         reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    AR_PUSH         reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    AR_POP          reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)
    $end            reduce using rule 27 (statement -> AR_SET_IDX ARRAY_VAR value value .)


state 90

    (6) statement -> SUB value value SCALAR_VAR .

    VAL_COPY        reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    ADD             reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    SUB             reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    MULT            reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    DIV             reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    TEST_LESS       reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    TEST_GTR        reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    TEST_EQU        reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    TEST_GTE        reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    TEST_LTE        reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    ID              reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    JUMP            reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    RANDOM          reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    OUT_VAL         reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    NOP             reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    PUSH            reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    POP             reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    AR_COPY         reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    AR_PUSH         reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    AR_POP          reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)
    $end            reduce using rule 6 (statement -> SUB value value SCALAR_VAR .)


state 91

    (9) statement -> TEST_LESS value value SCALAR_VAR .

    VAL_COPY        reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    ADD             reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    SUB             reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    MULT            reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    DIV             reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    TEST_LESS       reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    TEST_GTR        reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    TEST_EQU        reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    TEST_GTE        reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    TEST_LTE        reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    ID              reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    JUMP            reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    RANDOM          reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    OUT_VAL         reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    NOP             reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    PUSH            reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    POP             reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    AR_COPY         reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    AR_PUSH         reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    AR_POP          reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)
    $end            reduce using rule 9 (statement -> TEST_LESS value value SCALAR_VAR .)


state 92

    (13) statement -> TEST_GTE value value SCALAR_VAR .

    VAL_COPY        reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    ADD             reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    SUB             reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    MULT            reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    DIV             reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    TEST_LESS       reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    TEST_GTR        reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    TEST_EQU        reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    TEST_GTE        reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    TEST_LTE        reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    ID              reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    JUMP            reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    RANDOM          reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    OUT_VAL         reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    NOP             reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    PUSH            reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    POP             reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    AR_COPY         reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    AR_PUSH         reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    AR_POP          reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)
    $end            reduce using rule 13 (statement -> TEST_GTE value value SCALAR_VAR .)


state 93

    (5) statement -> ADD value value SCALAR_VAR .

    VAL_COPY        reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    ADD             reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    SUB             reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    MULT            reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    DIV             reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    TEST_LESS       reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    TEST_GTR        reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    TEST_EQU        reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    TEST_NEQU       reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    TEST_GTE        reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    TEST_LTE        reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    ID              reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    JUMP            reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    JUMP_IF_0       reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    JUMP_IF_N0      reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    RANDOM          reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    OUT_VAL         reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    OUT_CHAR        reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    NOP             reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    PUSH            reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    POP             reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    AR_GET_IDX      reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    AR_SET_IDX      reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    AR_GET_SIZE     reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    AR_SET_SIZE     reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    AR_COPY         reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    AR_PUSH         reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    AR_POP          reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)
    $end            reduce using rule 5 (statement -> ADD value value SCALAR_VAR .)

