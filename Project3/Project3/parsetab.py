
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "right=ASSIGN_ADDASSIGN_SUBASSIGN_MULTASSIGN_DIVleftBOOL_ORleftBOOL_ANDnonassocCOMP_EQUCOMP_NEQUCOMP_LESSCOMP_LTECOMP_GTRCOMP_GTEleft+-left*/nonassocUNARY_MINUSID VAL_LITERAL CHAR_LITERAL STRING_LITERAL ASSIGN_ADD ASSIGN_SUB ASSIGN_MULT ASSIGN_DIV COMP_EQU COMP_NEQU COMP_LESS COMP_LTE COMP_GTR COMP_GTE BOOL_AND BOOL_OR WHITESPACE COMMENT TYPE COMMAND_BREAK COMMAND_PRINT COMMAND_RANDOM\n    program : statements\n    \n    statements :\n    \n    statements : statements statement \n    \n    statement : expression ';'\n    \n    statement : declaration ';'\n            | print_statement ';'\n    \n    print_statement : COMMAND_PRINT '(' non_empty_comma_sep_expr ')'\n    \n    non_empty_comma_sep_expr : expression\n    \n    non_empty_comma_sep_expr : expression ',' non_empty_comma_sep_expr\n    \n    declaration : simple_declaration\n                | assign_declaration\n    \n    simple_declaration : type ID\n    \n    assign_declaration : simple_declaration '=' expression\n    \n    var_usage : ID\n    \n    expression : var_usage '=' expression\n    \n    expression : var_usage ASSIGN_ADD expression\n    \n    expression : var_usage ASSIGN_SUB expression\n    \n    expression : var_usage ASSIGN_MULT expression\n    \n    expression : var_usage ASSIGN_DIV expression\n    \n    expression : var_usage\n    \n    expression : COMMAND_RANDOM '(' expression ')'\n    \n    type : TYPE\n    \n    expression : expression BOOL_AND expression\n    \n    expression : expression BOOL_OR expression\n    \n    expression : VAL_LITERAL\n    \n    expression : expression '-' expression\n    \n    expression : expression '*' expression\n    \n    expression : expression '/' expression\n    \n    expression : expression '+' expression\n    \n    expression : expression COMP_EQU expression\n    \n    expression : expression COMP_NEQU expression\n    \n    expression : '-' expression %prec UNARY_MINUS\n    \n    expression : expression COMP_LESS expression\n    \n    expression : expression COMP_GTR expression\n    \n    expression : expression COMP_LTE expression\n    \n    expression : expression COMP_GTE expression\n    \n    expression : '(' expression ')'\n    "
    
_lr_action_items = {'COMP_LESS':([3,12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,],[18,-20,-14,-25,-32,18,None,None,18,None,-26,18,-27,-28,None,-29,None,None,18,18,18,18,18,18,18,18,-37,-21,]),'COMP_NEQU':([3,12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,],[22,-20,-14,-25,-32,22,None,None,22,None,-26,22,-27,-28,None,-29,None,None,22,22,22,22,22,22,22,22,-37,-21,]),'+':([3,12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,],[28,-20,-14,-25,-32,28,28,28,28,28,-26,28,-27,-28,28,-29,28,28,28,28,28,28,28,28,28,28,-37,-21,]),'COMP_EQU':([3,12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,],[20,-20,-14,-25,-32,20,None,None,20,None,-26,20,-27,-28,None,-29,None,None,20,20,20,20,20,20,20,20,-37,-21,]),'COMMAND_PRINT':([0,2,8,19,32,41,],[-2,15,-3,-4,-5,-6,]),'ASSIGN_MULT':([12,13,],[39,-14,]),'BOOL_AND':([3,12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,],[21,-20,-14,-25,-32,21,-33,-30,-23,-31,-26,21,-27,-28,-34,-29,-36,-35,21,21,21,21,21,21,21,21,-37,-21,]),'-':([0,2,3,7,8,12,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,],[-2,7,23,7,-3,-20,-14,7,-25,7,-4,7,7,7,7,7,7,7,7,7,7,7,7,-5,-32,7,7,7,7,7,7,-6,7,23,23,23,23,23,-26,23,-27,-28,23,-29,23,23,23,23,23,23,23,23,23,23,-37,-21,7,]),')':([12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,69,],[-20,-14,-25,-32,65,-33,-30,-23,-31,-26,-24,-27,-28,-34,-29,-36,-35,66,-16,-19,-15,-18,-17,-8,68,-37,-21,-9,]),',':([12,13,17,33,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,65,66,],[-20,-14,-25,-32,-33,-30,-23,-31,-26,-24,-27,-28,-34,-29,-36,-35,-16,-19,-15,-18,-17,67,-37,-21,]),'COMMAND_RANDOM':([0,2,7,8,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,67,],[-2,10,10,-3,10,10,-4,10,10,10,10,10,10,10,10,10,10,10,10,-5,10,10,10,10,10,10,-6,10,10,]),'ID':([0,2,7,8,9,11,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,67,],[-2,13,13,-3,-22,35,13,13,-4,13,13,13,13,13,13,13,13,13,13,13,13,-5,13,13,13,13,13,13,-6,13,13,]),'TYPE':([0,2,8,19,32,41,],[-2,9,-3,-4,-5,-6,]),'$end':([0,1,2,8,19,32,41,],[-2,0,-1,-3,-4,-5,-6,]),'ASSIGN_DIV':([12,13,],[37,-14,]),'COMP_GTE':([3,12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,],[29,-20,-14,-25,-32,29,None,None,29,None,-26,29,-27,-28,None,-29,None,None,29,29,29,29,29,29,29,29,-37,-21,]),'*':([3,12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,],[25,-20,-14,-25,-32,25,25,25,25,25,25,25,-27,-28,25,25,25,25,25,25,25,25,25,25,25,25,-37,-21,]),';':([3,4,5,6,12,13,14,17,33,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,65,66,68,],[19,-10,32,-11,-20,-14,41,-25,-32,-12,-33,-30,-23,-31,-26,-24,-27,-28,-34,-29,-36,-35,-13,-16,-19,-15,-18,-17,-37,-21,-7,]),'=':([4,12,13,35,],[31,38,-14,-12,]),'VAL_LITERAL':([0,2,7,8,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,67,],[-2,17,17,-3,17,17,-4,17,17,17,17,17,17,17,17,17,17,17,17,-5,17,17,17,17,17,17,-6,17,17,]),'BOOL_OR':([3,12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,],[24,-20,-14,-25,-32,24,-33,-30,-23,-31,-26,-24,-27,-28,-34,-29,-36,-35,24,24,24,24,24,24,24,24,-37,-21,]),'ASSIGN_ADD':([12,13,],[36,-14,]),'COMP_GTR':([3,12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,],[27,-20,-14,-25,-32,27,None,None,27,None,-26,27,-27,-28,None,-29,None,None,27,27,27,27,27,27,27,27,-37,-21,]),'/':([3,12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,],[26,-20,-14,-25,-32,26,26,26,26,26,26,26,-27,-28,26,26,26,26,26,26,26,26,26,26,26,26,-37,-21,]),'ASSIGN_SUB':([12,13,],[40,-14,]),'(':([0,2,7,8,10,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,67,],[-2,16,16,-3,34,42,16,16,-4,16,16,16,16,16,16,16,16,16,16,16,16,-5,16,16,16,16,16,16,-6,16,16,]),'COMP_LTE':([3,12,13,17,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,],[30,-20,-14,-25,-32,30,None,None,30,None,-26,30,-27,-28,None,-29,None,None,30,30,30,30,30,30,30,30,-37,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([2,],[11,]),'expression':([2,7,16,18,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,38,39,40,42,67,],[3,33,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,63,]),'var_usage':([2,7,16,18,20,21,22,23,24,25,26,27,28,29,30,31,34,36,37,38,39,40,42,67,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'simple_declaration':([2,],[4,]),'statement':([2,],[8,]),'declaration':([2,],[5,]),'program':([0,],[1,]),'print_statement':([2,],[14,]),'assign_declaration':([2,],[6,]),'non_empty_comma_sep_expr':([42,67,],[64,69,]),'statements':([0,],[2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','yaccy.py',23),
  ('statements -> <empty>','statements',0,'p_zero_statements','yaccy.py',29),
  ('statements -> statements statement','statements',2,'p_statements','yaccy.py',35),
  ('statement -> expression ;','statement',2,'p_statement','yaccy.py',43),
  ('statement -> declaration ;','statement',2,'p_declaration_statement','yaccy.py',49),
  ('statement -> print_statement ;','statement',2,'p_declaration_statement','yaccy.py',50),
  ('print_statement -> COMMAND_PRINT ( non_empty_comma_sep_expr )','print_statement',4,'p_print_statement','yaccy.py',56),
  ('non_empty_comma_sep_expr -> expression','non_empty_comma_sep_expr',1,'p_comma_sep_expression_1','yaccy.py',63),
  ('non_empty_comma_sep_expr -> expression , non_empty_comma_sep_expr','non_empty_comma_sep_expr',3,'p_comma_sep_expression_many','yaccy.py',70),
  ('declaration -> simple_declaration','declaration',1,'p_declaration','yaccy.py',77),
  ('declaration -> assign_declaration','declaration',1,'p_declaration','yaccy.py',78),
  ('simple_declaration -> type ID','simple_declaration',2,'p_simple_declaration','yaccy.py',84),
  ('assign_declaration -> simple_declaration = expression','assign_declaration',3,'p_assign_declaration','yaccy.py',96),
  ('var_usage -> ID','var_usage',1,'p_var_usage','yaccy.py',102),
  ('expression -> var_usage = expression','expression',3,'p_assignment','yaccy.py',108),
  ('expression -> var_usage ASSIGN_ADD expression','expression',3,'p_add_assign','yaccy.py',114),
  ('expression -> var_usage ASSIGN_SUB expression','expression',3,'p_sub_assign','yaccy.py',121),
  ('expression -> var_usage ASSIGN_MULT expression','expression',3,'p_mult_assign','yaccy.py',128),
  ('expression -> var_usage ASSIGN_DIV expression','expression',3,'p_div_assign','yaccy.py',135),
  ('expression -> var_usage','expression',1,'p_var_usage_value','yaccy.py',142),
  ('expression -> COMMAND_RANDOM ( expression )','expression',4,'p_random_call','yaccy.py',148),
  ('type -> TYPE','type',1,'p_type','yaccy.py',154),
  ('expression -> expression BOOL_AND expression','expression',3,'p_boolean_and','yaccy.py',160),
  ('expression -> expression BOOL_OR expression','expression',3,'p_boolean_or','yaccy.py',166),
  ('expression -> VAL_LITERAL','expression',1,'p_val_literal_expression','yaccy.py',173),
  ('expression -> expression - expression','expression',3,'p_arithmetic_expression_sub','yaccy.py',179),
  ('expression -> expression * expression','expression',3,'p_arithmetic_expression_mult','yaccy.py',185),
  ('expression -> expression / expression','expression',3,'p_arithmetic_expression_div','yaccy.py',192),
  ('expression -> expression + expression','expression',3,'p_arithmetic_expression_add','yaccy.py',199),
  ('expression -> expression COMP_EQU expression','expression',3,'p_boolean_expression_equality','yaccy.py',205),
  ('expression -> expression COMP_NEQU expression','expression',3,'p_boolean_expression_inequality','yaccy.py',211),
  ('expression -> - expression','expression',2,'p_boolean_expression_negation','yaccy.py',217),
  ('expression -> expression COMP_LESS expression','expression',3,'p_boolean_expression_less_than','yaccy.py',223),
  ('expression -> expression COMP_GTR expression','expression',3,'p_boolean_expression_greater_than','yaccy.py',229),
  ('expression -> expression COMP_LTE expression','expression',3,'p_boolean_expression_less_than_equal','yaccy.py',235),
  ('expression -> expression COMP_GTE expression','expression',3,'p_boolean_expression_greater_than_equal','yaccy.py',241),
  ('expression -> ( expression )','expression',3,'p_paren_expression','yaccy.py',247),
]
