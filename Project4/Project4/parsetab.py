
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "right=ASSIGN_ADDASSIGN_SUBASSIGN_MULTASSIGN_DIVleftBOOL_ORleftBOOL_ANDnonassocCOMP_EQUCOMP_NEQUCOMP_LESSCOMP_LTECOMP_GTRCOMP_GTEleft+-left*/nonassocUNARY_MINUSID VAL_LITERAL CHAR_LITERAL STRING_LITERAL ASSIGN_ADD ASSIGN_SUB ASSIGN_MULT ASSIGN_DIV COMP_EQU COMP_NEQU COMP_LESS COMP_LTE COMP_GTR COMP_GTE BOOL_AND BOOL_OR WHITESPACE COMMENT COMMAND_PRINT COMMAND_BREAK COMMAND_RANDOM TYPE\n    program : statements\n    \n    statements :\n    \n    statements : statements statement \n    \n    statement : expression ';'\n    \n    statement : declaration ';'\n            | print_statement ';'\n    \n    print_statement : COMMAND_PRINT '(' non_empty_comma_sep_expr ')'\n    \n    non_empty_comma_sep_expr : expression\n    \n    non_empty_comma_sep_expr : expression ',' non_empty_comma_sep_expr\n    \n    declaration : simple_declaration\n                | assign_declaration\n    \n    simple_declaration : type ID\n    \n    assign_declaration : simple_declaration '=' expression\n    \n    var_usage : ID\n    \n    expression : var_usage '=' expression\n    \n    expression : var_usage ASSIGN_ADD expression\n    \n    expression : var_usage ASSIGN_SUB expression\n    \n    expression : var_usage ASSIGN_MULT expression\n    \n    expression : var_usage ASSIGN_DIV expression\n    \n    expression : var_usage\n    \n    expression : COMMAND_RANDOM '(' expression ')'\n    \n    type : TYPE\n    \n    expression : expression BOOL_AND expression\n    \n    expression : expression BOOL_OR expression\n    \n    expression : VAL_LITERAL\n    \n    expression : expression '-' expression\n    \n    expression : expression '*' expression\n    \n    expression : expression '/' expression\n    \n    expression : expression '+' expression\n    \n    expression : expression COMP_EQU expression\n    \n    expression : expression COMP_NEQU expression\n    \n    expression : '-' expression %prec UNARY_MINUS\n    \n    expression : expression COMP_LESS expression\n    \n    expression : expression COMP_GTR expression\n    \n    expression : expression COMP_LTE expression\n    \n    expression : expression COMP_GTE expression\n    \n    expression : '(' expression ')'\n    "
    
_lr_action_items = {'=':([3,9,13,19,],[18,-14,40,-12,]),')':([9,13,16,34,35,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,],[-14,-20,-25,-32,59,-36,-29,-33,-35,-28,-30,-26,-34,-31,-27,-23,-24,66,-8,-37,68,-16,-19,-15,-18,-17,-21,-9,]),'*':([5,9,13,16,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,],[30,-14,-20,-25,-32,30,30,30,30,30,30,-28,30,30,30,30,-27,30,30,30,-37,30,30,30,30,30,30,-21,]),'COMP_LTE':([5,9,13,16,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,],[23,-14,-20,-25,-32,23,23,None,-29,None,None,-28,None,-26,None,None,-27,23,23,23,-37,23,23,23,23,23,23,-21,]),'COMMAND_PRINT':([0,2,14,27,37,43,],[-2,6,-3,-4,-5,-6,]),'COMP_GTE':([5,9,13,16,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,],[20,-14,-20,-25,-32,20,20,None,-29,None,None,-28,None,-26,None,None,-27,20,20,20,-37,20,20,20,20,20,20,-21,]),'-':([0,2,5,7,8,9,13,14,16,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,67,68,],[-2,7,26,7,7,-14,-20,-3,-25,7,7,7,7,7,7,7,7,-4,7,7,7,7,7,7,-32,26,7,-5,7,7,7,7,7,-6,26,26,-29,26,26,-28,26,-26,26,26,-27,26,26,26,-37,26,26,26,26,26,26,7,-21,]),'VAL_LITERAL':([0,2,7,8,14,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,67,],[-2,16,16,16,-3,16,16,16,16,16,16,16,16,-4,16,16,16,16,16,16,16,-5,16,16,16,16,16,-6,16,]),';':([3,5,9,11,12,13,15,16,19,34,44,45,46,47,48,49,50,51,52,53,54,55,56,59,61,62,63,64,65,66,68,],[-10,27,-14,37,-11,-20,43,-25,-12,-32,-13,-36,-29,-33,-35,-28,-30,-26,-34,-31,-27,-23,-24,-37,-16,-19,-15,-18,-17,-7,-21,]),'ASSIGN_SUB':([9,13,],[-14,42,]),',':([9,13,16,34,45,46,47,48,49,50,51,52,53,54,55,56,58,59,61,62,63,64,65,68,],[-14,-20,-25,-32,-36,-29,-33,-35,-28,-30,-26,-34,-31,-27,-23,-24,67,-37,-16,-19,-15,-18,-17,-21,]),'(':([0,2,6,7,8,10,14,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,67,],[-2,8,33,8,8,36,-3,8,8,8,8,8,8,8,8,-4,8,8,8,8,8,8,8,-5,8,8,8,8,8,-6,8,]),'ID':([0,2,4,7,8,14,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,67,],[-2,9,19,9,9,-3,-22,9,9,9,9,9,9,9,9,-4,9,9,9,9,9,9,9,-5,9,9,9,9,9,-6,9,]),'ASSIGN_ADD':([9,13,],[-14,38,]),'ASSIGN_DIV':([9,13,],[-14,39,]),'COMMAND_RANDOM':([0,2,7,8,14,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,67,],[-2,10,10,10,-3,10,10,10,10,10,10,10,10,-4,10,10,10,10,10,10,10,-5,10,10,10,10,10,-6,10,]),'ASSIGN_MULT':([9,13,],[-14,41,]),'COMP_EQU':([5,9,13,16,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,],[25,-14,-20,-25,-32,25,25,None,-29,None,None,-28,None,-26,None,None,-27,25,25,25,-37,25,25,25,25,25,25,-21,]),'+':([5,9,13,16,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,],[21,-14,-20,-25,-32,21,21,21,-29,21,21,-28,21,-26,21,21,-27,21,21,21,-37,21,21,21,21,21,21,-21,]),'/':([5,9,13,16,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,],[24,-14,-20,-25,-32,24,24,24,24,24,24,-28,24,24,24,24,-27,24,24,24,-37,24,24,24,24,24,24,-21,]),'$end':([0,1,2,14,27,37,43,],[-2,0,-1,-3,-4,-5,-6,]),'BOOL_OR':([5,9,13,16,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,],[32,-14,-20,-25,-32,32,32,-36,-29,-33,-35,-28,-30,-26,-34,-31,-27,-23,-24,32,-37,32,32,32,32,32,32,-21,]),'COMP_NEQU':([5,9,13,16,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,],[29,-14,-20,-25,-32,29,29,None,-29,None,None,-28,None,-26,None,None,-27,29,29,29,-37,29,29,29,29,29,29,-21,]),'COMP_LESS':([5,9,13,16,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,],[22,-14,-20,-25,-32,22,22,None,-29,None,None,-28,None,-26,None,None,-27,22,22,22,-37,22,22,22,22,22,22,-21,]),'BOOL_AND':([5,9,13,16,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,],[31,-14,-20,-25,-32,31,31,-36,-29,-33,-35,-28,-30,-26,-34,-31,-27,-23,31,31,-37,31,31,31,31,31,31,-21,]),'COMP_GTR':([5,9,13,16,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,68,],[28,-14,-20,-25,-32,28,28,None,-29,None,None,-28,None,-26,None,None,-27,28,28,28,-37,28,28,28,28,28,28,-21,]),'TYPE':([0,2,14,27,37,43,],[-2,17,-3,-4,-5,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'simple_declaration':([2,],[3,]),'var_usage':([2,7,8,18,20,21,22,23,24,25,26,28,29,30,31,32,33,36,38,39,40,41,42,67,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'statement':([2,],[14,]),'program':([0,],[1,]),'type':([2,],[4,]),'non_empty_comma_sep_expr':([33,67,],[57,69,]),'expression':([2,7,8,18,20,21,22,23,24,25,26,28,29,30,31,32,33,36,38,39,40,41,42,67,],[5,34,35,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,61,62,63,64,65,58,]),'assign_declaration':([2,],[12,]),'print_statement':([2,],[15,]),'declaration':([2,],[11,]),'statements':([0,],[2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','yaccy.py',23),
  ('statements -> <empty>','statements',0,'p_zero_statements','yaccy.py',29),
  ('statements -> statements statement','statements',2,'p_statements','yaccy.py',35),
  ('statement -> expression ;','statement',2,'p_statement','yaccy.py',43),
  ('statement -> declaration ;','statement',2,'p_declaration_statement','yaccy.py',49),
  ('statement -> print_statement ;','statement',2,'p_declaration_statement','yaccy.py',50),
  ('print_statement -> COMMAND_PRINT ( non_empty_comma_sep_expr )','print_statement',4,'p_print_statement','yaccy.py',56),
  ('non_empty_comma_sep_expr -> expression','non_empty_comma_sep_expr',1,'p_comma_sep_expression_1','yaccy.py',63),
  ('non_empty_comma_sep_expr -> expression , non_empty_comma_sep_expr','non_empty_comma_sep_expr',3,'p_comma_sep_expression_many','yaccy.py',70),
  ('declaration -> simple_declaration','declaration',1,'p_declaration','yaccy.py',77),
  ('declaration -> assign_declaration','declaration',1,'p_declaration','yaccy.py',78),
  ('simple_declaration -> type ID','simple_declaration',2,'p_simple_declaration','yaccy.py',84),
  ('assign_declaration -> simple_declaration = expression','assign_declaration',3,'p_assign_declaration','yaccy.py',96),
  ('var_usage -> ID','var_usage',1,'p_var_usage','yaccy.py',102),
  ('expression -> var_usage = expression','expression',3,'p_assignment','yaccy.py',108),
  ('expression -> var_usage ASSIGN_ADD expression','expression',3,'p_add_assign','yaccy.py',114),
  ('expression -> var_usage ASSIGN_SUB expression','expression',3,'p_sub_assign','yaccy.py',121),
  ('expression -> var_usage ASSIGN_MULT expression','expression',3,'p_mult_assign','yaccy.py',128),
  ('expression -> var_usage ASSIGN_DIV expression','expression',3,'p_div_assign','yaccy.py',135),
  ('expression -> var_usage','expression',1,'p_var_usage_value','yaccy.py',142),
  ('expression -> COMMAND_RANDOM ( expression )','expression',4,'p_random_call','yaccy.py',148),
  ('type -> TYPE','type',1,'p_type','yaccy.py',154),
  ('expression -> expression BOOL_AND expression','expression',3,'p_boolean_and','yaccy.py',160),
  ('expression -> expression BOOL_OR expression','expression',3,'p_boolean_or','yaccy.py',166),
  ('expression -> VAL_LITERAL','expression',1,'p_val_literal_expression','yaccy.py',173),
  ('expression -> expression - expression','expression',3,'p_arithmetic_expression_sub','yaccy.py',179),
  ('expression -> expression * expression','expression',3,'p_arithmetic_expression_mult','yaccy.py',185),
  ('expression -> expression / expression','expression',3,'p_arithmetic_expression_div','yaccy.py',192),
  ('expression -> expression + expression','expression',3,'p_arithmetic_expression_add','yaccy.py',199),
  ('expression -> expression COMP_EQU expression','expression',3,'p_boolean_expression_equality','yaccy.py',205),
  ('expression -> expression COMP_NEQU expression','expression',3,'p_boolean_expression_inequality','yaccy.py',211),
  ('expression -> - expression','expression',2,'p_boolean_expression_negation','yaccy.py',217),
  ('expression -> expression COMP_LESS expression','expression',3,'p_boolean_expression_less_than','yaccy.py',223),
  ('expression -> expression COMP_GTR expression','expression',3,'p_boolean_expression_greater_than','yaccy.py',229),
  ('expression -> expression COMP_LTE expression','expression',3,'p_boolean_expression_less_than_equal','yaccy.py',235),
  ('expression -> expression COMP_GTE expression','expression',3,'p_boolean_expression_greater_than_equal','yaccy.py',241),
  ('expression -> ( expression )','expression',3,'p_paren_expression','yaccy.py',247),
]
